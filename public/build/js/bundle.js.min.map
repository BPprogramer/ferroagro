{"version":3,"sources":["cajas/cajas.js","clientes/clientes.js","categorias/categorias.js","fiados/cargar-clientes.js","fiados/fiados.js","mercado/infoVenta.js","mercado/mercadolibre.js","inicio/index.js","pagos/pagos.js","productos/avastesimiento.js","productos/precios-producto.js","productos/productos.js","productos/stock_productos.js","productos-ventas/index.js","proveedores/proveedores.js","transacciones/egresos.js","transacciones/ingresos.js","usuarios/login.js","usuarios/usuario.js","ventas/crear-ventas.js","ventas/info-venta.js","ventas/reporte-ventas-graficas.js","ventas/reporte-ventas.js","ventas/ventas.js"],"names":["document","querySelector","btnAbrirCaja","formulario","btnSubmit","tablaCajas","id","efectivoAperturaInput","eliminarToastAnterior","remove","async","accionesModal","reset","disabled","$","modal","validate","resetForm","destroy","find","removeClass","respuesta","fetch","resultado","value","parseFloat","toLocaleString","llenarFormulario","json","error","console","log","consultarCaja","inicializarValidador","validator","setDefaults","submitHandler","datos","FormData","append","url","location","origin","body","method","type","Toasts","class","title","msg","ajax","reload","setTimeout","enviarDatos","rules","efectivo_apertura","required","messages","errorElement","errorPlacement","element","addClass","closest","highlight","errorClass","validClass","unhighlight","addEventListener","e","valor","valor_sin_formato","replace","isNaN","formatearValor","target","dataTable","fnDestroy","DataTable","language","decimal","emptyTable","info","infoEmpty","infoFiltered","infoPostFix","thousands","lengthMenu","loadingRecords","processing","search","zeroRecords","paginate","first","last","next","previous","deferRender","retrieve","proccesing","responsive","on","currentTarget","dataset","cajaId","parentElement","childNodes","textContent","Swal","fire","icon","html","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","eliminarCaja","alertaEliminarCaja","cerrarCaja","alertaCerrarCaja","event","tablaClientes","btnRegistrarCliente","nombre","cedula","celular","direccion","email","consultarCliente","trim","minlength","digits","rangelength","initComplete","fn","Buttons","buttons","container","appendTo","clienteId","cliente","eliminarCliente","alertaEliminarCliente","tablaCategorias","btnRegistrarCategoria","categoria","consultarCategoria","toUpperCase","categoriaId","eliminarCategoria","alertaEliminarCategoria","selectClientes","opcionDisabled","createElement","appendChild","forEach","opcion","select2","theme","consultarCLientes","datosDeuda","monto","deuda","saldo","venta_id","ventasInpagas","idCliente","btnSumitPago","bodyFiados","totalDeuda","deudaActual","btnPagarTodo","saldoRestante","text","consultarInfoCliente","calcularSaldoRestante","customValidation","addMethod","param","notEqualChar","limpiarHtml","ventas_fiadas","length","total_deuda","venta_fiada","codigo","total_factura","recaudo","pagado","push","tr","tdCodigo","tdTotal","tdAbono","tdDeuda","tdEstado","divEstado","classList","add","btnEstado","tdInfo","divInfo","btnInfo","innerHTML","btnPagos","btnPagar","onclick","fiado","productos","codigoVenta","clienteVenta","fechaVenta","totalVenta","recaudoVenta","saldoVenta","nombre_cliente","fecha","total","bodyProductos","producto","cantidad","precio","tdNombre","tdCantidad","tdPrecio","tdSubTotal","mostrarInfoFiado","consultarInfoVentaFiada","pagos","bodyPagos","pago","payment_number","date","payment_amount","responsible","remaining_balance","tdPaymentNumber","tdDate","tdResponsible","tdPaymentAmount","tdRemainingaBalance","tdActions","divActions","btnDelete","eliminarPago","alertaEliminarPago","mostrarPagos","data","cosultarPagosVentaFianda","pagarVentaFiada","cliente_id","mostrarFiados","referencia","firstChild","removeChild","deudaSinFormat","monto_ingresado","productos_venta","venta","totalVentaSinComision","metodoVenta","estadoVenta","metodo_pago","contains","estado","mostrarInfoVenta","consultarInfoVenta","ventaId","tablaMercadoLibre","pagosAuto","ingresos","ganancias","costos","inventario","numero_ventas","numero_fiados","numero_pagos","numero_cajas","numero_productos","numero_clientes","mostrarInfo","cargarInformacion","tablaProductos","formularioStock","nombre_producto","nuevo_stock","precio_paquete_nuevo","unidades_input_nuevo","precio_compra_nuevo","btnSubmitNewStock","calcularNuevoPrecioCompra","precio_paquete","unidades","precio_compra","Math","round","inicializarValidadorStock","idProductoActualizarStock","enviarDatosStock","tablaCompras","productoId","precio_compra_input","precio_venta_input","porcentaje_venta","precio_paquete_input","unidades_input","calcularPrecioCompra","calcularPorcentaje","precio_venta","porcentaje","toFixed","calcularPrecioVenta","btnRegistrarProducto","selectCategorias","selectProveedores","idCategoria","idProveedor","categoria_id","proveedor_id","stock","stock_minimo","consultarCategorias","categorias","selected","llenarSelectCategorias","consultarProveedores","proveedores","proveedor","llenarSelectProveedores","consultarProducto","isDataTable","serverSide","order","mostrarProductos","eliminarProducto","alertaEliminarProducto","tablaProductosVendidos","input_fecha_inicial","input_fecha_final","fecha_actual","Date","fecha_final","getFullYear","getMonth","slice","getDate","setMonth","fecha_inicial","consultarProductosVendidos","dataFilter","jsonData","JSON","parse","newJson","row","index","parseInt","existe","indexProducto","stringify","dataType","success","req","resposeText","tablaProveedores","btnRegistrarProvedor","proveedorId","eliminarProveedor","alertaEliminarProveedor","btnRegistrarEgreso","tablaEgresos","egreso","descripcion","consultarEgreso","ingreso","egresoId","eliminarEgreso","alertaEliminarEgreso","btnRegistrarIngreso","tablaIngresos","consultarIngreso","ingresoId","eliminarIngreso","alertaEliminarIngreso","password","window","href","tablaUsuarios","btnRegistrarUsuario","roll","limpiarSelect","optionDisabledEstado","setAttribute","optionEstado","optionEstado1","optionDisabledRoll","optionRoll","optionRoll1","consultarUsuario","passwordRules","passwordMsg","terms","mostrarUsuarios","usuarioId","eliminarUsuario","alertaEliminarUsuario","idAnterior","listadoProductos","productoObj","precio_original","valor_total","valoresObj","total_sin_descuento","total_pagar","descuento","costo","total_libre","focusCantidad","productosArray","guardarVentaBtn","totalInput","descuentoInput","totalPagarInput","medotodoPago","pagoContado","pagoCuotas","cantidadPagar","cantidadCambio","abono","nombreCliente","cedulaCliente","celularCliente","direccionCliente","emailCliente","bntAgregarCliente","btnQuitarCliente","contenedorCliente","codigoProducto","selectProductos","cargarCodigoVenta","codigo_venta","resetearCliente","val","trigger","contenedorProductos","rowDiv","col1Div","group1Div","prepend1Div","idProducto","filter","inputNombre","readOnly","col7Div","group7Div","prepend7Div","inputStock","col2Div","group2Div","prepend2Div","inputCantidad","focus","oninput","modificarTotalPorProducto","col3Div","group3Div","prepend3Div","inputPrecio","nuevo_precio_venta","col4Div","group4Div","prepend4Div","inputPrecioCantidad","resetarInputsMetodoPago","total_costo","Number","calcularTotal","parametro","aux","map","consultarInfoProducto","some","urlActual","URL","params","URLSearchParams","size","atob","get","productosVenta","productoVenta","precio_factura","cedula_cliente","celular_cliente","direccion_cliente","undefined","email_cliente","optionToSelect","llenarInformacion","consultarVenta","leerDatosUrl","preventDefault","miString","test","keyCode","productoSeleccionado","toLowerCase","productoPorCodigo","consultarProductos","valor_abono","resetearVentaAnterior","enviarInformacion","revisarVenta","cambio","mercadolibre","ventas","totalSInDescuento","ingresos_totales","total_inventario","fecha_actual_utc","fecha_actual_formateada","getTime","toISOString","llenarIputFecha","tablaVentas","idString","toString","btoa","revisarPagosAsociados","numero_venta","eliminarVenta","alertaEliminarVenta","open","imprimirVenta","mostrarVentas"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){\r\n    const cajas = document.querySelector('#cajas');\r\n    if(cajas){\r\n    \r\n        const btnAbrirCaja = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#cajaForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaCajas;\r\n    \r\n        let id;\r\n        const efectivoAperturaInput = document.querySelector('#efectivo-apertura');\r\n\r\n        efectivoAperturaInput.addEventListener('input', function(e){\r\n            efectivoAperturaInput.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarCajas();\r\n      \r\n\r\n        btnAbrirCaja.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.cajaId;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.cajaId;\r\n            alertaEliminarCaja(id,e);\r\n        }) \r\n        $('#tabla').on('click', '#cerrar', function(e){\r\n            const id = e.currentTarget.dataset.cajaId;\r\n            alertaCerrarCaja(id,e);\r\n        }) \r\n\r\n        function alertaEliminarCaja(id,e){\r\n            \r\n            const efectivo_apertura = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar esta caja la cual tiene una efectivo de apertura de  <span class=\"font-weight-bold\"> ${efectivo_apertura} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCaja(id)\r\n                }\r\n            })\r\n        }\r\n        function alertaCerrarCaja(id,e){\r\n  \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">¿Está seguro de cerrar esta caja? </h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Cerrar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    cerrarCaja(id)\r\n                }\r\n            })\r\n        }\r\n        async function cerrarCaja(id){\r\n           \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/cerrar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    tablaCajas.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n        async function eliminarCaja(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaCajas.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarCajas(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCajas = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/cajas',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/cajas',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('efectivo_apertura', efectivoAperturaInput.value);\r\n\r\n        \r\n           btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/caja/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/caja/crear`;\r\n            }\r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-caja').modal('hide');\r\n                }else{\r\n                    tablaCajas.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-caja').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-caja').modal('show');\r\n            $('#cajaForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#cajaForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#cajaForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n                consultarCaja();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarCaja(){\r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/caja?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n           \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n  \r\n\r\n            efectivoAperturaInput.value = (parseFloat(resultado)).toLocaleString('en');\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#cajaForm').validate({\r\n              rules: {\r\n                efectivo_apertura: {\r\n                    required: true\r\n                      \r\n                }\r\n              },\r\n              messages: {\r\n                efectivo_apertura: {\r\n                    required: \"El campo es obligatorio, si el efectivo inicial es cero porfavor digite 0\"  \r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#cajaForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const categorias = document.querySelector('#clientes');\r\n    if(categorias){\r\n        let tablaClientes;\r\n        let id = null;\r\n        const btnRegistrarCliente = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#clienteForm');\r\n        const nombre = document.querySelector('#nombre');\r\n        const cedula = document.querySelector('#cedula');\r\n        const celular = document.querySelector('#celular');\r\n        const direccion = document.querySelector('#direccion');\r\n        const email = document.querySelector('#email');\r\n        mostrarClientes();\r\n \r\n\r\n        btnRegistrarCliente.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.clienteId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idCliente = e.currentTarget.dataset.clienteId;\r\n            alertaEliminarCliente(idCliente,e);\r\n        })\r\n       \r\n        \r\n        function alertaEliminarCliente(id, e){\r\n  \r\n            const cliente = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al Cliente <span class=\"font-weight-bold\"> ${cliente} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCliente(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarCliente(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/cliente/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaClientes.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        function mostrarClientes(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaClientes = $('#tabla').DataTable({\r\n                ajax: '/api/clientes',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaClientes, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/clientes',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-cliente').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCliente();\r\n            }\r\n        }\r\n\r\n        async function consultarCliente(){\r\n            try {\r\n                const respuesta = await fetch(`/api/cliente?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            nombre.value = resultado.nombre;\r\n            cedula.value = resultado.cedula;\r\n            celular.value = resultado.celular;\r\n            direccion.value = resultado.direccion;\r\n            email.value = resultado.email;\r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('cedula', (cedula.value));\r\n            datos.append('celular', (celular.value));\r\n            datos.append('direccion', (direccion.value).trim());\r\n            datos.append('email', (email.value).trim());\r\n           \r\n            \r\n            btnSubmit.disabled = true;\r\n\r\n      \r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/cliente/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/cliente/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaClientes.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-cliente').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n      \r\n           \r\n             $('#clienteForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true,\r\n                    minlength: 6   \r\n                },\r\n                cedula: {\r\n                 \r\n                    digits:true,\r\n                    minlength: 6   \r\n                },\r\n                celular: {\r\n                \r\n                    digits:true,\r\n                    rangelength: [10, 10]   \r\n                },\r\n                email:{\r\n                    email:true,\r\n                }\r\n\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\",\r\n                    minlength: \"Debe tener al menos 6 caracteres\"   \r\n                },\r\n                cedula: {\r\n                 \r\n                    digits: \"Solo valores númericos\",\r\n                    minlength:  \"Debe tener al menos 6 numeros\",\r\n                },\r\n                celular: {\r\n                 \r\n                    digits:\"solo valores numericos\",\r\n                    rangelength: \"Debe contener 10 números\" \r\n                },\r\n               \r\n                email:{\r\n                    email:\"el email no es valido\"\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#clienteForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const categorias = document.querySelector('#categorias');\r\n    if(categorias){\r\n        let tablaCategorias;\r\n        let id = null;\r\n        let idCategoria = null;\r\n        let idProveedor = null;\r\n        const btnRegistrarCategoria = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#categoriaForm');\r\n        const categoria = document.querySelector('#categoria');\r\n        mostrarCategorias();\r\n\r\n\r\n\r\n        categoria.addEventListener('input',function(e){\r\n            categoria.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n        btnRegistrarCategoria.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        \r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.categoriaId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idCategoria = e.currentTarget.dataset.categoriaId;\r\n            alertaEliminarCategoria(idCategoria,e);\r\n        })\r\n\r\n       \r\n     \r\n        \r\n        function alertaEliminarCategoria(id, e){\r\n  \r\n            const categoria = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar la categoría <span class=\"font-weight-bold\"> ${categoria} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCategoria(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarCategoria(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/categoria/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaCategorias.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                $(document).Toasts('create', {\r\n                    class: 'bg-danger',\r\n                    title: 'Error',\r\n                 \r\n                    body: 'No es Posible eliminar la cateogoría porque tiene productos  asociados'\r\n                  })\r\n\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            }\r\n        }\r\n        function mostrarCategorias(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCategorias = $('#tabla').DataTable({\r\n                ajax: '/api/categorias',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaCategorias, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/categorias',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-categoria').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCategoria();\r\n            }\r\n        }\r\n\r\n        async function consultarCategoria(){\r\n            try {\r\n                const respuesta = await fetch(`/api/categoria?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            categoria.value = resultado.categoria;\r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('categoria', (categoria.value).trim());\r\n           \r\n         \r\n            btnSubmit.disabled = true;\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/categoria/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/categoria/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              ;\r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaCategorias.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                 \r\n                    $('#modal-categoria').modal('hide');\r\n                    //tablaCategorias.ajax.reload(); \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n   \r\n            \r\n             $('#categoriaForm').validate({\r\n              rules: {\r\n                categoria: {\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                categoria: {\r\n                    required: \"El nombre de la categoría es obligatorio\"\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#categoriaForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n    if(seccionFiados){\r\n\r\n        const selectClientes = document.querySelector('#selectClientes');\r\n\r\n        consultarCLientes();\r\n\r\n        async function consultarCLientes(){\r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/clientes-ventas-fiadas`);\r\n                const resultado =  await respuesta.json();\r\n\r\n       \r\n               \r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled =   document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un cliente--';\r\n                opcionDisabled.value = \"0\";/*  */\r\n\r\n                selectClientes.appendChild(opcionDisabled);\r\n            \r\n                resultado.forEach(cliente => {\r\n                    \r\n                    const opcion =   document.createElement('OPTION');\r\n                    opcion.value = cliente.id;\r\n                    opcion.textContent = cliente.nombre;\r\n                   \r\n                    selectClientes.appendChild(opcion)\r\n            \r\n                });\r\n         \r\n                $('#selectClientes').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n        \r\n       \r\n        }  \r\n    }\r\n})();","(function () {\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n\r\n\r\n    if (seccionFiados) {\r\n\r\n        let datosDeuda = {\r\n            monto: 0,\r\n            deuda: 0,\r\n            saldo: 0,\r\n            venta_id: ''\r\n        }\r\n\r\n        let ventasInpagas = [];\r\n        let idCliente = '';\r\n        const btnSumitPago = document.querySelector('#btnSubmitPago');\r\n\r\n        const bodyFiados = document.querySelector('#body-fiados');\r\n\r\n        const totalDeuda = document.querySelector('#total-deuda');\r\n        const btnPagar = document.querySelector('#pagar');\r\n        const formulario = document.querySelector('#pagoForm')\r\n\r\n        const deudaActual = document.querySelector('#deuda-actual');\r\n        const btnPagarTodo = document.querySelector('#pagar-todo');\r\n        const monto = document.querySelector('#monto');\r\n        const saldoRestante = document.querySelector('#saldo-restante');\r\n\r\n        btnPagarTodo.addEventListener('click', function () {\r\n            datosDeuda.monto = datosDeuda.deuda\r\n            monto.value = parseFloat(datosDeuda.monto).toLocaleString('en');\r\n            calcularSaldoRestante()\r\n        })\r\n\r\n        monto.addEventListener('input', function (e) {\r\n\r\n            const valor = e.target.value;\r\n\r\n            let deudaSinFormat = parseFloat(valor.replace(/,/g, ''));\r\n\r\n            if (deudaSinFormat == '') {\r\n                deudaSinFormat = 0;\r\n            }\r\n            datosDeuda.monto = deudaSinFormat;\r\n            calcularSaldoRestante()\r\n            const monto_ingresado = formatearValor(valor);\r\n\r\n\r\n            monto.value = monto_ingresado;\r\n\r\n        })\r\n\r\n\r\n        $('#selectClientes').on('select2:select', function (e) {\r\n            if (e.target.value != 0) {\r\n\r\n                consultarInfoCliente(e.target.value);\r\n            } else {\r\n                //resetearCliente();\r\n            }\r\n        });\r\n        // btnPagar.addEventListener('click', function () {\r\n        //     id = null;\r\n        //     accionesModal();\r\n        // })\r\n\r\n\r\n        /* funcion para validar que el monto a pagar no sea mayor que el monto de la deuda */\r\n        function validarMontoYSaldo() {\r\n            if (datosDeuda.saldo < 0) {\r\n\r\n                return false;\r\n            }\r\n            return true\r\n        }\r\n\r\n        async function enviarDatos() {\r\n\r\n            const esValido = validarMontoYSaldo()\r\n            if (!esValido) {\r\n                Swal.fire({\r\n                    icon: 'warning',\r\n                    text: 'El monto a pagar no puede superar el valor de la deuda',\r\n                })\r\n                return;\r\n            }\r\n\r\n\r\n            const datos = new FormData();\r\n            datos.append('venta_id', datosDeuda.venta_id);\r\n            datos.append('monto', datosDeuda.monto);\r\n            btnSumitPago.disabled = true;\r\n            const url = `${location.origin}/api/pagar`;\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n\r\n                btnSumitPago.disabled = false;\r\n                $('#modal-pago').modal('hide');\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                    consultarInfoCliente(idCliente)\r\n                }\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n        }\r\n\r\n        function calcularSaldoRestante() {\r\n            datosDeuda.saldo = datosDeuda.deuda - datosDeuda.monto;\r\n            if (isNaN(datosDeuda.saldo)) {\r\n                datosDeuda.saldo = datosDeuda.deuda;\r\n            }\r\n            saldoRestante.textContent = '$' + parseFloat(datosDeuda.saldo).toLocaleString('en')\r\n        }\r\n\r\n        function accionesModal() {\r\n\r\n            formulario.reset();\r\n\r\n            btnSumitPago.disabled = false;\r\n            console.log(datosDeuda)\r\n\r\n            deudaActual.value = parseFloat(datosDeuda.deuda).toLocaleString('en')\r\n            saldoRestante.textContent = \"$\" + parseFloat(datosDeuda.saldo).toLocaleString('en');\r\n            inicializarValidador();\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        async function consultarInfoCliente(id) {\r\n            idCliente = id;\r\n\r\n            try {\r\n                saldoRestante.textContent = '$0';\r\n                const respuesta = await fetch(`${location.origin}/api/pagos-cuotas?id=${id}`);\r\n\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n\r\n                limpiarHtml(bodyFiados);\r\n\r\n                if (resultado.ventas_fiadas.length == 0) {\r\n                    Swal.fire({\r\n                        icon: 'warning',\r\n                        text: 'No hay fiados para este cliente',\r\n                    })\r\n                    totalDeuda.textContent = 0;\r\n                    datosDeuda.deuda = 0;\r\n                    datosDeuda.monto = 0;\r\n                    datosDeuda.saldo = 0;\r\n\r\n\r\n                } else {\r\n                    const { ventas_fiadas } = resultado;\r\n                    mostrarFiados(ventas_fiadas);\r\n\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n        function alertaEliminarPago(pago) {\r\n\r\n\r\n            Swal.fire({\r\n                icon: 'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el pago número ${pago.payment_number} por un valor de <span class=\"font-weight-bold\"> ${(parseFloat(pago.payment_amount)).toLocaleString('en')} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n\r\n\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    eliminarPago(pago)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarPago(pago) {\r\n\r\n            const datos = new FormData();\r\n            datos.append('id', pago.id);\r\n            const url = `${location.origin}/api/eliminar-pago`;\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                })\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                    $('#modal-pagos').modal('hide');\r\n                    consultarInfoCliente(idCliente)\r\n\r\n                }\r\n\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n\r\n        function mostrarFiados(ventas_fiadas) {\r\n\r\n            let total_deuda = 0;\r\n\r\n            ventas_fiadas.forEach(venta_fiada => {\r\n\r\n                const { codigo, total_factura, recaudo, pagado } = venta_fiada;\r\n\r\n                if (pagado != 0) {\r\n                    ventasInpagas.push();\r\n                }\r\n\r\n                const tr = document.createElement('TR');\r\n\r\n                const tdCodigo = document.createElement('TD');\r\n                tdCodigo.textContent = '#' + codigo;\r\n\r\n                const tdTotal = document.createElement('TD');\r\n                tdTotal.textContent = '$' + parseFloat(total_factura).toLocaleString('en');\r\n\r\n                const tdAbono = document.createElement('TD');\r\n                tdAbono.textContent = '$' + parseFloat(recaudo).toLocaleString('en');\r\n\r\n                const tdDeuda = document.createElement('TD');\r\n                tdDeuda.textContent = '$' + parseFloat(total_factura - recaudo).toLocaleString('en');\r\n\r\n                const tdEstado = document.createElement('TD');\r\n\r\n                const divEstado = document.createElement('DIV');\r\n                divEstado.classList.add('d-flex', 'justify-content-left', 'text-center');\r\n\r\n                const btnEstado = document.createElement('BUTTON');\r\n                btnEstado.type = 'button'\r\n\r\n                btnEstado.classList.add('btn', 'w-40', 'btn-inline', 'btn-sm');\r\n\r\n                if (pagado == 0) {\r\n                    total_deuda = total_deuda + parseFloat(total_factura) - parseFloat(recaudo);\r\n                    btnEstado.textContent = 'Pendiente';\r\n                    btnEstado.classList.add('btn-danger');\r\n                } else {\r\n                    btnEstado.textContent = 'Pagado';\r\n                    btnEstado.classList.add('bg-azul', 'text-white');\r\n                }\r\n\r\n\r\n\r\n                divEstado.appendChild(btnEstado);\r\n                tdEstado.appendChild(divEstado);\r\n\r\n                const tdInfo = document.createElement('TD');\r\n                const divInfo = document.createElement('DIV');\r\n                divInfo.classList.add('d-flex', 'justify-content-start');\r\n\r\n                const btnInfo = document.createElement('BUTTON');\r\n                btnInfo.type = 'button'\r\n                btnInfo.classList.add('btn', 'btn-sm', 'bg-hover-azul', 'text-white', 'toolMio', 'mr-2');\r\n                btnInfo.innerHTML = '<span class=\"toolMio-text\">Ver venta</span><i class=\"fas fa-search\"></i>';\r\n                const btnPagos = document.createElement('BUTTON');\r\n                btnPagos.type = 'button'\r\n                btnPagos.classList.add('btn', 'btn-sm', 'bg-hover-azul', 'text-white', 'toolMio', 'mr-2');\r\n                btnPagos.innerHTML = '<span class=\"toolMio-text\">Pagos</span><i class=\"fas fa-money-bill-wave\"></i>  ';\r\n\r\n                const btnPagar = document.createElement('BUTTON');\r\n                btnPagar.type = 'button'\r\n                btnPagar.classList.add('btn', 'btn-sm', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                btnPagar.innerHTML = '<span class=\"toolMio-text\">Pagar</span><i class=\"fas fa-coins\"></i>  ';\r\n\r\n                btnInfo.onclick = () => {\r\n                    consultarInfoVentaFiada(venta_fiada); //consultamos la ifnromacion de la venta normal\r\n                }\r\n                btnPagos.onclick = () => {\r\n                    cosultarPagosVentaFianda(venta_fiada); //consultamos los pagos que se han hecho a esta venta\r\n                }\r\n                btnPagar.onclick = () => {\r\n                    pagarVentaFiada(venta_fiada); //consultamos los pagos que se han hecho a esta venta\r\n                }\r\n\r\n                divInfo.appendChild(btnInfo);\r\n                divInfo.appendChild(btnPagos);\r\n                divInfo.appendChild(btnPagar);\r\n                tdInfo.appendChild(divInfo);\r\n\r\n                tr.appendChild(tdCodigo)\r\n                tr.appendChild(tdTotal)\r\n                tr.appendChild(tdAbono)\r\n                tr.appendChild(tdDeuda)\r\n                tr.appendChild(tdEstado)\r\n                tr.appendChild(tdInfo);\r\n                bodyFiados.appendChild(tr);\r\n                datosDeuda.cliente_id = venta_fiada.cliente_id;\r\n            });\r\n            totalDeuda.textContent = parseFloat(total_deuda).toLocaleString('en')\r\n            datosDeuda.deuda = total_deuda;\r\n            datosDeuda.saldo = total_deuda;\r\n\r\n        }\r\n\r\n\r\n\r\n        function mostrarInfoFiado(fiado, productos) {\r\n\r\n\r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n\r\n            codigoVenta.textContent = fiado.codigo\r\n            clienteVenta.textContent = fiado.nombre_cliente\r\n            fechaVenta.textContent = fiado.fecha\r\n            totalVenta.textContent = (parseFloat(fiado.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(fiado.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(fiado.total - fiado.recaudo)).toLocaleString('en');\r\n\r\n            const bodyProductos = document.querySelector('#body-productos-fiados');\r\n            limpiarHtml(bodyProductos);\r\n\r\n            productos.forEach(producto => {\r\n                const { nombre, cantidad, precio } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n\r\n        }\r\n\r\n        /* para mostrar los pagos relacionados a una venta */\r\n        function mostrarPagos(venta_fiada, pagos) {\r\n            const bodyPagos = document.querySelector('#body-pagos');\r\n            limpiarHtml(bodyPagos);\r\n            pagos.forEach(pago => {\r\n                const { payment_number, date, payment_amount, responsible, remaining_balance } = pago;\r\n\r\n                const tr = document.createElement('TR');\r\n\r\n                const tdPaymentNumber = document.createElement('TD');\r\n                tdPaymentNumber.textContent = '#' + payment_number;\r\n\r\n                const tdDate = document.createElement('TD');\r\n                tdDate.textContent = date;\r\n                const tdResponsible = document.createElement('TD');\r\n                tdResponsible.textContent = responsible.nombre;\r\n\r\n\r\n                const tdPaymentAmount = document.createElement('TD');\r\n                tdPaymentAmount.textContent = '$' + parseFloat(payment_amount).toLocaleString('en');\r\n\r\n                const tdRemainingaBalance = document.createElement('TD');\r\n                tdRemainingaBalance.textContent = '$' + parseFloat(remaining_balance).toLocaleString('en');\r\n\r\n\r\n\r\n                const tdActions = document.createElement('TD');\r\n                const divActions = document.createElement('DIV');\r\n                divActions.classList.add('d-flex', 'ustify-content-start');\r\n\r\n\r\n                const btnDelete = document.createElement('BUTTON');\r\n                btnDelete.type = 'button'\r\n                btnDelete.classList.add('btn', 'btn-sm', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                btnDelete.innerHTML = '<span class=\"toolMio-text\">Eliminar</span><i class=\"fas fa-trash\"></i>';\r\n\r\n                btnDelete.onclick = function () {\r\n                    //eliminarPago(pago.numero_pago); //vamos a revisar que la \r\n                    alertaEliminarPago(pago);\r\n                }\r\n                // divActions.appendChild(btnInfo);\r\n                divActions.appendChild(btnDelete);\r\n                tdActions.appendChild(divActions);\r\n\r\n                tr.appendChild(tdPaymentNumber)\r\n                tr.appendChild(tdDate)\r\n                tr.appendChild(tdResponsible)\r\n                tr.appendChild(tdPaymentAmount)\r\n                tr.appendChild(tdRemainingaBalance)\r\n\r\n\r\n                tr.appendChild(tdActions);\r\n                bodyPagos.appendChild(tr);\r\n\r\n            });\r\n\r\n        }\r\n\r\n        async function consultarInfoVentaFiada(venta_fiada) {\r\n\r\n            $('#modal-info').modal('show');\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/productos-fiados?venta_id=${venta_fiada.id}`);\r\n                const resultado = await respuesta.json();\r\n\r\n                if (resultado.type == 'error') {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        text: resultado.msg,\r\n                    })\r\n                } else {\r\n\r\n                    mostrarInfoFiado(venta_fiada, resultado)\r\n                }\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n        async function cosultarPagosVentaFianda(venta_fiada) {\r\n\r\n\r\n            try {\r\n\r\n                const respuesta = await fetch(`${location.origin}/api/pagos-por-venta?venta_id=${venta_fiada.id}`);\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n                if (resultado.type == 'error') {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        text: resultado.msg,\r\n                    })\r\n                } else {\r\n\r\n                    $('#modal-pagos').modal('show');\r\n                    mostrarPagos(venta_fiada, resultado.data)\r\n                }\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n        }\r\n        async function pagarVentaFiada(venta_fiada) {\r\n\r\n            const { total_factura, recaudo, id, pagado } = venta_fiada\r\n            if (pagado == 1) {\r\n                Swal.fire({\r\n                    icon: 'warning',\r\n                    text: 'Esta venta ya se encuentra pagada en su totalidad',\r\n                })\r\n            } else {\r\n                $('#modal-pago').modal('show');\r\n                datosDeuda.deuda = total_factura - recaudo\r\n                datosDeuda.saldo = total_factura - recaudo\r\n                datosDeuda.venta_id = id\r\n\r\n                accionesModal()\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n\r\n\r\n\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n                submitHandler: function () {\r\n                    enviarDatos();\r\n                }\r\n            });\r\n\r\n            // Función para validar que el valor sea diferente de \"0\"\r\n            function notEqualChar(value, element, param) {\r\n                return value !== param;\r\n            }\r\n\r\n            $('#pagoForm').validate({\r\n                rules: {\r\n                    monto: {\r\n                        required: true,\r\n                        customValidation: '0' // Carácter que se debe evitar\r\n                    }\r\n                },\r\n                messages: {\r\n                    monto: {\r\n                        required: 'El monto a pagar es obligatorio',\r\n                        customValidation: 'El monto no puede ser igual a \"0\"'\r\n                    }\r\n                },\r\n                errorElement: 'span',\r\n                errorPlacement: function (error, element) {\r\n                    error.addClass('invalid-feedback');\r\n                    element.closest('.form-group').append(error);\r\n                },\r\n                highlight: function (element, errorClass, validClass) {\r\n                    $(element).addClass('is-invalid');\r\n                },\r\n                unhighlight: function (element, errorClass, validClass) {\r\n                    $(element).removeClass('is-invalid');\r\n                }\r\n            });\r\n\r\n            // Agregar la regla personalizada utilizando la función\r\n            $.validator.addMethod('customValidation', function (value, element) {\r\n                return notEqualChar(value, element, '0');\r\n            }, 'Este campo no puede ser igual a \"0\"');\r\n        }\r\n\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        // // Llamar a la función de inicialización al cargar la página\r\n        // $(document).ready(function () {\r\n        //     inicializarValidador();\r\n        // });\r\n\r\n        // // Volver a inicializar el validador cuando se detecta que el formulario es válido\r\n        // $('#pagoForm').on('valid', function (event) {\r\n        //     inicializarValidador();\r\n        // });\r\n\r\n    }\r\n\r\n\r\n})();","(function () {\r\n    const ventas = document.querySelector('#mercadolibre');\r\n    if (ventas) {\r\n\r\n        $('#tabla').on('click', '#info', function (e) {\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n            \r\n            consultarInfoVenta(ventaId);\r\n        })\r\n        async function consultarInfoVenta(id) {\r\n            $('#modal-info').modal('show');\r\n\r\n            const url = `${location.origin}/api/venta?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarInfoVenta(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        function mostrarInfoVenta(resultado) {\r\n            const { productos_venta , venta} = resultado\r\n      \r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const totalVentaSinComision = document.querySelector('#total-sin-comision');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n            const metodoVenta = document.querySelector('#metodo-venta');\r\n            const estadoVenta = document.querySelector('#estado-venta');\r\n            \r\n            codigoVenta.textContent = venta.codigo\r\n            clienteVenta.textContent = venta.nombre_cliente\r\n            fechaVenta.textContent = venta.fecha\r\n            totalVenta.textContent = (parseFloat(venta.total_factura)).toLocaleString('en');\r\n            totalVentaSinComision.textContent = (parseFloat(venta.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(venta.total_factura - venta.recaudo)).toLocaleString('en');\r\n\r\n         \r\n            if(venta.metodo_pago==2){\r\n                metodoVenta.textContent = 'Fiado'\r\n            }\r\n            if(venta.metodo_pago==3){\r\n                metodoVenta.textContent = 'Mercado Libre'\r\n            }\r\n            if(venta.metodo_pago==1){\r\n                metodoVenta.textContent = 'De Contado'\r\n            }\r\n            if(estadoVenta.classList.contains('text-danger')){\r\n                estadoVenta.classList.remove('text-danger')\r\n            }\r\n            if(estadoVenta.classList.contains('text-success')){\r\n                estadoVenta.classList.remove('text-success')\r\n            }\r\n            if(venta.estado==0){\r\n                estadoVenta.textContent = 'Pendiente'\r\n                estadoVenta.classList.add('text-danger')\r\n            }else{\r\n                estadoVenta.textContent = 'Pagado'\r\n                estadoVenta.classList.add('text-success')\r\n            }\r\n\r\n            \r\n            const bodyProductos = document.querySelector('#body-productos-venta');\r\n            limpiarHtml(bodyProductos);\r\n\r\n         \r\n\r\n         \r\n            productos_venta.forEach(producto => {\r\n                const { nombre, cantidad, precio } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n            \r\n        }\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const mercadolibre = document.querySelector('#mercadolibre');\r\n    if(mercadolibre){\r\n\r\n        let tablaMercadoLibre\r\n\r\n         pagosAuto();\r\n         mostrarVentas()\r\n\r\n        async function pagosAuto(){\r\n       \r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/pagos-auto`);\r\n                // const resultado = await respuesta.json();\r\n        \r\n               \r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n\r\n        function mostrarVentas(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaMercadoLibre = $('#tabla').DataTable({\r\n                ajax: '/api/mercadolibre',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaMercadoLibre, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/mercadolibre',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n    }\r\n})();","(function(){\r\n    const inicio = document.querySelector('#inicio');\r\n    if(inicio){\r\n        const ingresos = document.querySelector('#inicio_ingresos')\r\n        const ganancias = document.querySelector('#inicio_ganancias')\r\n        const costos = document.querySelector('#inicio_costos')\r\n        const inventario = document.querySelector('#inicio_inventario')\r\n        // const ingresos_reales = document.querySelector('#inicio_ingresos_reales')\r\n        // const ganancias_reales = document.querySelector('#inicio_ganancias_reales')\r\n        // const dinero_fiados = document.querySelector('#inicio_dinero_fiados')\r\n        const numero_ventas = document.querySelector('#inicio_numero_ventas')\r\n        const numero_fiados = document.querySelector('#inicio_numero_fiados')\r\n        const numero_pagos = document.querySelector('#inicio_numero_pagos')\r\n        const numero_cajas = document.querySelector('#inicio_numero_cajas')\r\n        const numero_productos = document.querySelector('#inicio_numero_productos')\r\n        const numero_clientes = document.querySelector('#inicio_numero_clientes')\r\n        // const dinero_mercado_libre = document.querySelector('#inicio_dinero_mercado_libre')\r\n        // const dinero_pendiente_mercado_libre = document.querySelector('#inicio_dinero_pendiente_mercado_libre')\r\n        \r\n\r\n        cargarInformacion();\r\n\r\n        function mostrarInfo(resultado){\r\n      \r\n            ingresos.textContent = resultado.ingresos\r\n            ganancias.textContent = resultado.ganancias\r\n            costos.textContent = resultado.costos\r\n            inventario.textContent = resultado.inventario\r\n            // ingresos_reales.textContent = resultado.ingresos_reales\r\n            // ganancias_reales.textContent = resultado.ganancias_reales\r\n            // dinero_fiados.textContent = resultado.fiados\r\n            numero_ventas.textContent = resultado.numero_ventas\r\n            numero_fiados.textContent = resultado.numero_fiados\r\n            numero_pagos.textContent = resultado.numero_pagos\r\n            numero_cajas.textContent = resultado.numero_cajas\r\n            numero_productos.textContent = resultado.numero_productos\r\n            numero_clientes.textContent = resultado.numero_clientes\r\n            // dinero_mercado_libre.textContent = resultado.dinero_mercado_libre\r\n            // dinero_pendiente_mercado_libre.textContent = resultado.dinero_pendiente_mercado_libre\r\n            \r\n        }\r\n\r\n        async function cargarInformacion(){\r\n            const url = `${location.origin}/api/inicio`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarInfo(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const pagos = document.querySelector('#pagos');\r\n    if(pagos){\r\n   \r\n\r\n\r\n        let tablaProductos;\r\n    \r\n\r\n        mostrarProductos();\r\n\r\n        function mostrarProductos(){\r\n      \r\n           $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaProductos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/pagos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n                \r\n            });\r\n      \r\n            // $.ajax({\r\n            //     url:'/api/pagos',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log('consulado req')\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //          console.log('consulado erros')\r\n            //         console.log(error)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n\r\n        /* consultar Categorias */\r\n     \r\n    \r\n    \r\n\r\n     \r\n\r\n\r\n     \r\n\r\n    \r\n       \r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const compras = document.querySelector('#compras');\r\n    if(compras){\r\n        let tablaProductosVendidos;\r\n        const formularioStock = document.querySelector('#stockForm');\r\n        const nombre_producto = document.querySelector('#nombre_producto');\r\n        const nuevo_stock = document.querySelector('#nuevo_stock');\r\n        const precio_paquete_nuevo = document.querySelector('#precio_paquete_nuevo');\r\n        const unidades_input_nuevo = document.querySelector('#unidades_nuevo');\r\n        const precio_compra_nuevo = document.querySelector('#precio_compra_nuevo');\r\n        const btnSubmitNewStock = document.querySelector('#btnSubmitNewStock');\r\n        consultarProductos();\r\n\r\n        $('#tabla').on('click', '#agregar_stock', function(e){\r\n           \r\n            idProductoActualizarStock = e.currentTarget.dataset.productoId;\r\n            formularioStock.reset();\r\n            btnSubmitNewStock.disabled = false;\r\n            $('#modal-stock').modal('show');\r\n            $('#stockForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#stockForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#stockForm').find('.is-invalid').removeClass('is-invalid');\r\n  \r\n \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            nombre_producto.value = nombre;\r\n            inicializarValidadorStock();\r\n        })\r\n\r\n        precio_paquete_nuevo.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_nuevo.value = precio_paquete;\r\n            calcularNuevoPrecioCompra();\r\n        })\r\n        unidades_input_nuevo.addEventListener('input',function(e){\r\n            \r\n            calcularNuevoPrecioCompra();\r\n        })\r\n\r\n        precio_compra_nuevo.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_nuevo.value = precio_compra;\r\n        \r\n        })\r\n\r\n\r\n\r\n       \r\n        function consultarProductos(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCompras = $('#tabla').DataTable({\r\n                ajax: '/api/compras',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaCompras, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\", \"colvis\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n       \r\n       \r\n        }\r\n        function calcularNuevoPrecioCompra(){\r\n            precio_compra_nuevo.value = '';\r\n    \r\n            const precio_paquete = parseFloat((precio_paquete_nuevo.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input_nuevo.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_nuevo.value = (Math.round(precio_compra)).toLocaleString('en')\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        async function enviarDatosStock(){\r\n            const datos = new FormData();\r\n     \r\n            datos.append('id', idProductoActualizarStock)\r\n            datos.append('stock', (nuevo_stock.value));\r\n            datos.append('precio_compra', (precio_compra_nuevo.value));\r\n\r\n           btnSubmitNewStock.disabled = true;\r\n\r\n            const url = `${location.origin}/api/producto/editar-stock`;\r\n        \r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n          \r\n          \r\n                eliminarToastAnterior();\r\n         \r\n                btnSubmitNewStock.disabled = false;\r\n              \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                   \r\n                    $(\"#tabla\").DataTable().ajax.reload();\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formularioStock.reset();\r\n\r\n                    $('#modal-stock').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n        \r\n        function inicializarValidadorStock(id) {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                enviarDatosStock()\r\n         \r\n              }\r\n            });\r\n      \r\n             $('#stockForm').validate({\r\n              rules: {\r\n                \r\n               \r\n                nuevo_stock: {\r\n                    required: true\r\n                },\r\n               \r\n                precio_compra_nuevo:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                nuevo_stock: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                precio_compra_nuevo: {\r\n                    required: 'la nueva cantidad adquirida es obligatoria'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#stockForm').on('valid', function(event) {\r\n            inicializarValidadorStock();\r\n        });\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n    }\r\n})();","(function () {\r\n    const productos = document.querySelector('#productos');\r\n    if (productos) {\r\n        const precio_compra_input = document.querySelector('#precio_compra');\r\n        const precio_venta_input = document.querySelector('#precio_venta');\r\n        const porcentaje_venta = document.querySelector('#porcentaje_venta');\r\n        const precio_paquete_input = document.querySelector('#precio_paquete');\r\n        const unidades_input = document.querySelector('#unidades');\r\n        precio_compra_input.addEventListener('input', function (e) {\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_input.value = precio_compra;\r\n            calcularPorcentaje()\r\n        })\r\n        precio_venta_input.addEventListener('input', function (e) {\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_venta_input.value = precio_compra;\r\n            calcularPorcentaje();\r\n\r\n        })\r\n        porcentaje_venta.addEventListener('input', function (e) {\r\n            calcularPrecioVenta(e.target.value);\r\n\r\n\r\n        })\r\n        precio_paquete_input.addEventListener('input', function (e) {\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_input.value = precio_paquete;\r\n            calcularPrecioCompra();\r\n        })\r\n        unidades_input.addEventListener('input', function (e) {\r\n\r\n            calcularPrecioCompra();\r\n        })\r\n\r\n        function calcularPrecioCompra() {\r\n            precio_compra_input.value = '';\r\n            precio_venta_input.value = '';\r\n            porcentaje_venta.value = '';\r\n            const precio_paquete = parseFloat((precio_paquete_input.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input.value);\r\n            if (isNaN(precio_paquete) || isNaN(unidades)) {\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete / unidades;\r\n            precio_compra_input.value = (Math.round(precio_compra)).toLocaleString('en')\r\n            // calcularPrecioVenta(porcentaje_venta.input);\r\n            // calcularPorcentaje();\r\n\r\n        }\r\n\r\n\r\n        // function calcularPrecioVenta(porcentaje){\r\n        //     const precio_compra = parseFloat((precio_compra_input.value).replace(/,/g, ''));\r\n\r\n        //     if(isNaN(precio_compra)){\r\n        //         return;\r\n        //     }\r\n        //     const precio_venta = parseFloat(porcentaje)*precio_compra/100;\r\n        //     precio_venta_input.value = (Math.round(precio_venta / 100) * 100).toLocaleString('en')\r\n        // }\r\n\r\n        function calcularPrecioVenta(porcentaje) {\r\n            const precio_compra = parseFloat((precio_compra_input.value).replace(/,/g, ''));\r\n\r\n            if (isNaN(precio_compra)) {\r\n                return;\r\n            }\r\n\r\n            // Fórmula correcta: precio_venta = precio_compra + (precio_compra * porcentaje / 100)\r\n            const precio_venta = precio_compra + (precio_compra * parseFloat(porcentaje) / 100);\r\n\r\n            // Redondear al múltiplo de 100 más cercano y formatear con comas\r\n            precio_venta_input.value = (Math.round(precio_venta / 100) * 100).toLocaleString('en');\r\n        }\r\n\r\n\r\n        function calcularPorcentaje() {\r\n\r\n            const precio_compra = parseFloat((precio_compra_input.value).replace(/,/g, ''));\r\n            const precio_venta = parseFloat((precio_venta_input.value).replace(/,/g, ''));\r\n            if (isNaN(precio_compra) || isNaN(precio_venta)) {\r\n                return;\r\n            }\r\n            const porcentaje = ((precio_venta - precio_compra) * 100) / precio_compra;\r\n            porcentaje_venta.value = porcentaje.toFixed(2)\r\n        }\r\n\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n\r\n    }\r\n})();","(function () {\r\n    const productos = document.querySelector('#productos');\r\n    if (productos) {\r\n        const btnRegistrarProducto = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#productoForm');\r\n        const selectCategorias = document.querySelector('#categoria_id');\r\n        const selectProveedores = document.querySelector('#proveedor_id');\r\n        let formularioValidador;\r\n        let idCategoria = null;\r\n        let idProveedor = null;\r\n        let tablaProductos;\r\n        /* inputs del formulario */\r\n        let id;\r\n        const nombre = document.querySelector('#nombre');\r\n        const codigo = document.querySelector('#codigo');\r\n        const categoria_id = document.querySelector('#categoria_id');\r\n        const proveedor_id = document.querySelector('#proveedor_id');\r\n        const stock = document.querySelector('#stock');\r\n        const stock_minimo = document.querySelector('#stock_minimo');\r\n        const precio_compra = document.querySelector('#precio_compra');\r\n        const precio_venta = document.querySelector('#precio_venta');\r\n        const porcentaje_venta = document.querySelector('#porcentaje_venta');\r\n\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        btnSubmit.addEventListener('click', function () {\r\n            //agregar validacion para el input cateogria_id y proveedor_id\r\n        })\r\n\r\n        mostrarProductos();\r\n        //convertir el nombre a mayusculas\r\n        nombre.addEventListener('input', function (e) {\r\n            nombre.value = (e.target.value).toUpperCase();\r\n\r\n        })\r\n\r\n        btnRegistrarProducto.addEventListener('click', function () {\r\n            id = null;\r\n            idCategoria = null;\r\n            idProveedor = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function (e) {\r\n            id = e.currentTarget.dataset.productoId;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#eliminar', function (e) {\r\n            const idProducto = e.currentTarget.dataset.productoId;\r\n            alertaEliminarProducto(idProducto, e);\r\n        })\r\n\r\n        function alertaEliminarProducto(id, e) {\r\n\r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n            console.log(nombre)\r\n\r\n            Swal.fire({\r\n                icon: 'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el producto <span class=\"font-weight-bold\"> ${nombre} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n\r\n\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    eliminarProducto(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarProducto(id) {\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n\r\n            url = `${location.origin}/api/producto/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    body: datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(() => {\r\n                        eliminarToastAnterior();\r\n                    }, 8000)\r\n\r\n\r\n                    tablaProductos.ajax.reload();\r\n                }\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n\r\n        // function mostrarProductos(){\r\n\r\n        //     $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n\r\n        //     tablaProductos = $('#tabla').DataTable({\r\n        //         language: {\r\n        //             \"decimal\": \"\",\r\n        //             \"emptyTable\": \"No hay información\",\r\n        //             \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n        //             \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n        //             \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n        //             \"infoPostFix\": \"\",\r\n        //             \"thousands\": \",\",\r\n        //             \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n        //             \"loadingRecords\": \"Cargando...\",\r\n        //             \"processing\": \"Procesando...\",\r\n        //             \"search\": \"Buscar:\",\r\n        //             \"zeroRecords\": \"Sin resultados encontrados\",\r\n        //             \"paginate\": {\r\n        //                 \"first\": \"Primero\",\r\n        //                 \"last\": \"Ultimo\",\r\n        //                 \"next\": \"Siguiente\",\r\n        //                 \"previous\": \"Anterior\"\r\n        //             }\r\n        //         },\r\n        //         ajax: '/api/productos',\r\n        //         \"deferRender\":true,\r\n        //         \"retrieve\":true,\r\n        //         \"proccesing\":true,\r\n        //         responsive:true\r\n\r\n        //     });\r\n\r\n        //     // $.ajax({\r\n        //     //     url:'/api/productos',\r\n        //     //     dataType:'json',\r\n        //     //     success:function(req){\r\n        //     //         console.log(req)\r\n        //     //     },\r\n        //     //     error:function(error){\r\n        //     //         console.log(error.resposeText)\r\n        //     //     }\r\n        //     // })\r\n\r\n        // }  \r\n\r\n        function mostrarProductos() {\r\n            if ($.fn.DataTable.isDataTable('#tabla')) {\r\n                $('#tabla').DataTable().destroy();\r\n            }\r\n\r\n            tablaProductos = $('#tabla').DataTable({\r\n                processing: true,\r\n                serverSide: true,\r\n                ajax: {\r\n                    url: '/api/productos',\r\n                    type: 'GET'\r\n                },\r\n                responsive: true,\r\n                order: [[1, 'desc']],\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 a 0 de 0 Entradas\",\r\n                    \"infoFiltered\": \"(filtrado de _MAX_ entradas totales)\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"No se encontraron resultados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Último\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        /* consultar Categorias */\r\n        async function consultarCategorias() {\r\n            const url = `/api/productos-categorias`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const categorias = await respuesta.json();\r\n                llenarSelectCategorias(categorias);\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n        /* consultar Proveedores */\r\n        async function consultarProveedores() {\r\n            const url = `/api/productos-proveedores`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const proveedores = await respuesta.json();\r\n\r\n                llenarSelectProveedores(proveedores);\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n        function llenarSelectCategorias(categorias) {\r\n            limpiarHtml(selectCategorias);\r\n            // llenarPrimerOption(selectCategorias);\r\n\r\n            // const opcionDisabled =   document.createElement('OPTION');\r\n            //     opcionDisabled.textContent = '--seleccione un producto--';\r\n            //     opcionDisabled.disabled = true;\r\n            //     opcionDisabled.selected = true;\r\n\r\n            //     selectCategorias.appendChild(opcionDisabled); \r\n\r\n            categorias.forEach(categoria => {\r\n\r\n                const opcion = document.createElement('OPTION');\r\n                opcion.value = categoria.id;\r\n                opcion.textContent = categoria.categoria;\r\n                if (categoria.id == idCategoria) {\r\n\r\n                    opcion.selected = true;\r\n                }\r\n\r\n\r\n                selectCategorias.appendChild(opcion)\r\n\r\n            });\r\n            // $('.selectCategoria').select2()\r\n            // $('.selectProveedor').select2()\r\n            // $('.select2bs4').select2({\r\n            //     theme: 'bootstrap4'\r\n            // })\r\n\r\n        }\r\n        function llenarSelectProveedores(proveedores) {\r\n            limpiarHtml(selectProveedores);\r\n\r\n            // const opcionDisabled =   document.createElement('OPTION');\r\n            //     opcionDisabled.textContent = '--seleccione un producto--';\r\n            //     opcionDisabled.disabled = true;\r\n            //     opcionDisabled.selected = true;\r\n\r\n            //     selectProveedores.appendChild(opcionDisabled); \r\n\r\n            //  llenarPrimerOption(selectProveedores);\r\n            proveedores.forEach(proveedor => {\r\n\r\n                const opcion = document.createElement('OPTION');\r\n                opcion.value = proveedor.id;\r\n                opcion.textContent = proveedor.nombre;\r\n                if (proveedor.id == idProveedor) {\r\n\r\n                    opcion.selected = true;\r\n                }\r\n                selectProveedores.appendChild(opcion)\r\n\r\n            });\r\n            $('.selectCategoria').select2()\r\n            $('.selectProveedor').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n\r\n\r\n        }\r\n\r\n        async function enviarDatos() {\r\n\r\n            const datos = new FormData();\r\n            if (id) {\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('codigo', (codigo.value).trim());\r\n            datos.append('categoria_id', (categoria_id.value));\r\n            datos.append('proveedor_id', (proveedor_id.value));\r\n            datos.append('stock', (stock.value));\r\n            datos.append('stock_minimo', (stock_minimo.value));\r\n            datos.append('precio_compra', (precio_compra.value));\r\n            datos.append('precio_venta', (precio_venta.value));\r\n            datos.append('porcentaje_venta', (porcentaje_venta.value));\r\n\r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if (id) {\r\n                url = `${location.origin}/api/producto/editar`;\r\n            } else {\r\n                url = `${location.origin}/api/producto/crear`;\r\n            }\r\n\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    body: datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n\r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n                    tablaProductos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(() => {\r\n                        eliminarToastAnterior();\r\n                    }, 4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-producto').modal('hide');\r\n\r\n                }\r\n\r\n            } catch (error) {\r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal() {\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-producto').modal('show');\r\n            $('#productoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#productoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#productoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if (id) {\r\n                consultarProducto();\r\n            }\r\n\r\n            await consultarCategorias();\r\n            await consultarProveedores();\r\n\r\n            inicializarValidador();\r\n\r\n\r\n        }\r\n\r\n        async function consultarProducto() {\r\n            try {\r\n                const respuesta = await fetch(`/api/producto?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado) {\r\n            idCategoria = resultado.categoria_id;\r\n            idProveedor = resultado.proveedor_id;\r\n            nombre.value = (resultado.nombre).toUpperCase();\r\n            codigo.value = resultado.codigo;\r\n            stock.value = resultado.stock;\r\n            stock_minimo.value = resultado.stock_minimo;\r\n            precio_compra.value = (parseFloat(resultado.precio_compra)).toLocaleString('en');\r\n            precio_venta.value = (parseFloat(resultado.precio_venta)).toLocaleString('en');\r\n            porcentaje_venta.value = resultado.porcentaje_venta;\r\n\r\n        }\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n                submitHandler: function () {\r\n                    enviarDatos();\r\n\r\n\r\n                }\r\n            });\r\n\r\n\r\n            $('#productoForm').validate({\r\n                rules: {\r\n                    nombre: {\r\n                        required: true\r\n\r\n                    },\r\n\r\n                    stock: {\r\n                        required: true\r\n                    },\r\n                    stock_minimo: {\r\n                        required: true\r\n                    },\r\n                    precio_compra: {\r\n                        required: true\r\n                    },\r\n                    precio_venta: {\r\n                        required: true\r\n                    },\r\n                    porcentaje_venta: {\r\n                        required: true\r\n                    }\r\n                },\r\n                messages: {\r\n                    nombre: {\r\n                        required: \"El nombre es obligatorio\"\r\n                    },\r\n                    stock: {\r\n                        required: 'El stock inicial es obligatorio'\r\n                    },\r\n                    stock_minimo: {\r\n                        required: 'El Stock mínimo es obligatorio'\r\n                    },\r\n                    precio_compra: {\r\n                        required: 'El precio de compra es obligatorio'\r\n                    },\r\n                    precio_venta: {\r\n                        required: 'El precio de venta es obligatorio'\r\n                    },\r\n                    porcentaje_venta: {\r\n                        required: 'El porcentaje de venta es obligatorio'\r\n                    }\r\n\r\n                },\r\n                errorElement: 'span',\r\n                errorPlacement: function (error, element) {\r\n                    error.addClass('invalid-feedback');\r\n                    element.closest('.form-group').append(error);\r\n                },\r\n                highlight: function (element, errorClass, validClass) {\r\n                    $(element).addClass('is-invalid');\r\n                },\r\n                unhighlight: function (element, errorClass, validClass) {\r\n                    $(element).removeClass('is-invalid');\r\n                }\r\n            });\r\n        };\r\n        $('#productoForm').on('valid', function (event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n\r\n\r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function limpiarHtml(referencia) {\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n\r\n    if(productos){\r\n        const formularioStock = document.querySelector('#stockForm');\r\n        const nombre_producto = document.querySelector('#nombre_producto');\r\n        const nuevo_stock = document.querySelector('#nuevo_stock');\r\n        const precio_paquete_nuevo = document.querySelector('#precio_paquete_nuevo');\r\n        const unidades_input_nuevo = document.querySelector('#unidades_nuevo');\r\n        const precio_compra_nuevo = document.querySelector('#precio_compra_nuevo');\r\n        const btnSubmitNewStock = document.querySelector('#btnSubmitNewStock');\r\n\r\n        let idProductoActualizarStock;\r\n        \r\n        $('#tabla').on('click', '#agregar_stock', function(e){\r\n           \r\n            idProductoActualizarStock = e.currentTarget.dataset.productoId;\r\n            formularioStock.reset();\r\n            btnSubmitNewStock.disabled = false;\r\n            $('#modal-stock').modal('show');\r\n            $('#stockForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#stockForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#stockForm').find('.is-invalid').removeClass('is-invalid');\r\n  \r\n \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n            nombre_producto.value = nombre;\r\n            inicializarValidadorStock();\r\n        })\r\n\r\n        precio_paquete_nuevo.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_nuevo.value = precio_paquete;\r\n            calcularNuevoPrecioCompra();\r\n        })\r\n        unidades_input_nuevo.addEventListener('input',function(e){\r\n            \r\n            calcularNuevoPrecioCompra();\r\n        })\r\n\r\n        precio_compra_nuevo.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_nuevo.value = precio_compra;\r\n        \r\n        })\r\n     \r\n\r\n        function calcularNuevoPrecioCompra(){\r\n            precio_compra_nuevo.value = '';\r\n    \r\n            const precio_paquete = parseFloat((precio_paquete_nuevo.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input_nuevo.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_nuevo.value = (Math.round(precio_compra)).toLocaleString('en')\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n\r\n        async function enviarDatosStock(){\r\n            const datos = new FormData();\r\n     \r\n            datos.append('id', idProductoActualizarStock)\r\n            datos.append('stock', (nuevo_stock.value));\r\n            datos.append('precio_compra', (precio_compra_nuevo.value));\r\n\r\n           btnSubmitNewStock.disabled = true;\r\n\r\n            const url = `${location.origin}/api/producto/editar-stock`;\r\n        \r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n          \r\n          \r\n                eliminarToastAnterior();\r\n         \r\n                btnSubmitNewStock.disabled = false;\r\n              \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                   \r\n                    $(\"#tabla\").DataTable().ajax.reload();\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formularioStock.reset();\r\n\r\n                    $('#modal-stock').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidadorStock(id) {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                enviarDatosStock()\r\n         \r\n              }\r\n            });\r\n      \r\n             $('#stockForm').validate({\r\n              rules: {\r\n                \r\n               \r\n                nuevo_stock: {\r\n                    required: true\r\n                },\r\n               \r\n                precio_compra_nuevo:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                nuevo_stock: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                precio_compra_nuevo: {\r\n                    required: 'la nueva cantidad adquirida es obligatoria'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#stockForm').on('valid', function(event) {\r\n            inicializarValidadorStock();\r\n        });\r\n\r\n        \r\n\r\n    \r\n    }\r\n\r\n})();","(function () {\r\n    const productos_vendidos = document.querySelector('#productos-vendidos');\r\n    if (productos_vendidos) {\r\n\r\n        let tablaProductosVendidos;\r\n        const input_fecha_inicial = document.querySelector('#fecha-inicial');\r\n        const input_fecha_final = document.querySelector('#fecha-final');\r\n\r\n        const fecha_actual = new Date();\r\n\r\n\r\n        let fecha_final = fecha_actual.getFullYear() + '-' + ('0' + (fecha_actual.getMonth() + 1)).slice(-2) + '-' + ('0' + fecha_actual.getDate()).slice(-2);\r\n        // Obtener la fecha actual restada un mes\r\n        fecha_actual.setMonth(fecha_actual.getMonth() - 1);\r\n        let fecha_inicial = fecha_actual.getFullYear() + '-' + ('0' + (fecha_actual.getMonth() + 1)).slice(-2) + '-' + ('0' + fecha_actual.getDate()).slice(-2);\r\n\r\n\r\n        cargarInputs();\r\n        document.addEventListener(\"DOMContentLoaded\", function () {\r\n\r\n\r\n            input_fecha_inicial.addEventListener('change', function () {\r\n                fecha_final = input_fecha_final.value;\r\n                fecha_inicial = input_fecha_inicial.value;\r\n                consultarProductosVendidos()\r\n            })\r\n            input_fecha_final.addEventListener('change', function () {\r\n                fecha_final = input_fecha_final.value;\r\n                fecha_inicial = input_fecha_inicial.value;\r\n                consultarProductosVendidos()\r\n            })\r\n\r\n            // consultarProductosVendidos();\r\n\r\n        });\r\n\r\n        function cargarInputs() {\r\n            input_fecha_inicial.value = fecha_inicial\r\n            input_fecha_final.value = fecha_final\r\n            consultarProductosVendidos()\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        function consultarProductosVendidos() {\r\n\r\n\r\n            const fechaObjeto_1 = new Date(fecha_inicial);\r\n            const fechaObjeto_2 = new Date(fecha_final);\r\n\r\n            if (fechaObjeto_1 >= fechaObjeto_2) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: \"Error\",\r\n                    text: \"La fecha inicial debe ser menor que la fecha final\",\r\n\r\n                });\r\n                return;\r\n            } else {\r\n                const datos = new FormData();\r\n                datos.append(\"fecha_inicial\", fecha_inicial);\r\n                datos.append(\"fecha_final\", fecha_final);\r\n\r\n                $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n\r\n                tablaProductosVendidos = $('#tabla').DataTable({\r\n                    ajax: {\r\n                        url: `${location.origin}/api/productos-vendidos?fecha-inicial=${fecha_inicial}&fecha-final=${fecha_final}`,\r\n                        dataFilter: function (data) {\r\n                            const jsonData = JSON.parse(data);\r\n                            let newJson = [];\r\n                            let newArray = [];\r\n                            const datos = jsonData.data;\r\n                            console.log(datos)\r\n                            // Iterar sobre los datos y sumar las cantidades por ID de producto\r\n                            datos.forEach(function (row, index) {\r\n                                let idProducto = row[1]; // Obtener el ID del producto\r\n                                let cantidad = parseInt(row[4]) // Obtener la cantidad (convertida a número)\r\n                                if (newJson.length > 0) {\r\n                                    let existe = false;\r\n                                    newJson.forEach((producto, indexProducto) => {\r\n                                            if(producto[1]==row[1]){\r\n                                                newJson[indexProducto][4] =  parseInt(newJson[indexProducto][4]) + parseInt(row[4]);\r\n                                                newJson[indexProducto][6] = parseInt(newJson[indexProducto][4])*parseInt(newJson[indexProducto][5])\r\n                                                existe = true;\r\n                                            }\r\n                                        }\r\n                                    )\r\n                                    if(existe == false){\r\n                                        newJson.push(row);\r\n                                    }\r\n                                } else {\r\n                                    newJson.push(row);\r\n                                }\r\n\r\n                               \r\n\r\n\r\n\r\n                                // // Sumar la cantidad al total correspondiente al ID de producto\r\n                                // if (sumasPorProducto.hasOwnProperty(idProducto)) {\r\n                                //     sumasPorProducto[idProducto] += cantidad;\r\n                                // } else {\r\n                                //     sumasPorProducto[idProducto] = cantidad;\r\n                                // }\r\n                            });\r\n                            console.log(newJson);\r\n\r\n                            // Crear un nuevo arreglo de datos con los totales por ID de producto\r\n\r\n                            // let nuevosDatos = [];\r\n                            // Object.keys(sumasPorProducto).forEach(function (idProducto) {\r\n                            //     nuevosDatos.push([idProducto, sumasPorProducto[idProducto]]);\r\n                            // });\r\n\r\n\r\n                            // Devolver los datos procesados como una cadena JSON\r\n                            return JSON.stringify({ data: newJson });\r\n                        }\r\n                    },\r\n                    \"deferRender\": true,\r\n                    \"retrieve\": true,\r\n                    \"proccesing\": true,\r\n                    responsive: true,\r\n                    initComplete: function () {\r\n                        // Inicializa los botones después de que la tabla se haya creado\r\n                        var buttons = new $.fn.dataTable.Buttons(tablaProductosVendidos, {\r\n                            buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\", \"colvis\"]\r\n                        }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                    }\r\n                });\r\n                // tablaProductosVendidos = $('#tabla').DataTable({\r\n                //     ajax: `${location.origin}/api/productos-vendidos?fecha-inicial=${fecha_inicial}&fecha-final=${fecha_final}`,\r\n                //     \"deferRender\":true,\r\n                //     \"retrieve\":true,\r\n                //     \"proccesing\":true,\r\n                //     responsive:true,\r\n                //     initComplete: function () {\r\n                //         // Inicializa los botones después de que la tabla se haya creado\r\n                //         var buttons = new $.fn.dataTable.Buttons(tablaProductosVendidos, {\r\n                //             buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\", \"colvis\"]\r\n                //         }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                //     }\r\n                // });\r\n                $.ajax({\r\n\r\n                    url: `${location.origin}/api/productos-vendidos?fecha-inicial=${fecha_inicial}&fecha-final=${fecha_final}`,\r\n\r\n                    dataType: 'json',\r\n                    success: function (req) {\r\n                         console.log(req)\r\n\r\n                    },\r\n                    error: function (error) {\r\n                        console.log(error.resposeText)\r\n                    }\r\n\r\n                })\r\n\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n        function calcularNuevoPrecioCompra() {\r\n            precio_compra_nuevo.value = '';\r\n\r\n            const precio_paquete = parseFloat((precio_paquete_nuevo.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input_nuevo.value);\r\n            if (isNaN(precio_paquete) || isNaN(unidades)) {\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete / unidades;\r\n            precio_compra_nuevo.value = (Math.round(precio_compra)).toLocaleString('en')\r\n        }\r\n\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n        async function enviarDatosStock() {\r\n            const datos = new FormData();\r\n\r\n            datos.append('id', idProductoActualizarStock)\r\n            datos.append('stock', (nuevo_stock.value));\r\n            datos.append('precio_compra', (precio_compra_nuevo.value));\r\n\r\n            btnSubmitNewStock.disabled = true;\r\n\r\n            const url = `${location.origin}/api/producto/editar-stock`;\r\n\r\n\r\n\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    body: datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n                eliminarToastAnterior();\r\n\r\n                btnSubmitNewStock.disabled = false;\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n\r\n                    $(\"#tabla\").DataTable().ajax.reload();\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(() => {\r\n                        eliminarToastAnterior();\r\n                    }, 4000)\r\n\r\n                    formularioStock.reset();\r\n\r\n                    $('#modal-stock').modal('hide');\r\n\r\n                }\r\n\r\n            } catch (error) {\r\n            }\r\n        }\r\n\r\n        function inicializarValidadorStock(id) {\r\n            $.validator.setDefaults({\r\n                submitHandler: function () {\r\n                    enviarDatosStock()\r\n\r\n                }\r\n            });\r\n\r\n            $('#stockForm').validate({\r\n                rules: {\r\n\r\n\r\n                    nuevo_stock: {\r\n                        required: true\r\n                    },\r\n\r\n                    precio_compra_nuevo: {\r\n                        required: true\r\n                    }\r\n                },\r\n                messages: {\r\n                    nuevo_stock: {\r\n                        required: \"El nombre es obligatorio\"\r\n                    },\r\n                    precio_compra_nuevo: {\r\n                        required: 'la nueva cantidad adquirida es obligatoria'\r\n                    }\r\n\r\n                },\r\n                errorElement: 'span',\r\n                errorPlacement: function (error, element) {\r\n                    error.addClass('invalid-feedback');\r\n                    element.closest('.form-group').append(error);\r\n                },\r\n                highlight: function (element, errorClass, validClass) {\r\n                    $(element).addClass('is-invalid');\r\n                },\r\n                unhighlight: function (element, errorClass, validClass) {\r\n                    $(element).removeClass('is-invalid');\r\n                }\r\n            });\r\n        };\r\n        $('#stockForm').on('valid', function (event) {\r\n            inicializarValidadorStock();\r\n        });\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const categorias = document.querySelector('#proveedores');\r\n    if(categorias){\r\n        let tablaProveedores;\r\n        let id = null;\r\n        const btnRegistrarProvedor = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#proveedorForm');\r\n        const nombre = document.querySelector('#nombre');\r\n        const cedula = document.querySelector('#cedula');\r\n        const celular = document.querySelector('#celular');\r\n        const direccion = document.querySelector('#direccion');\r\n        const email = document.querySelector('#email');\r\n        mostrarProveedores();\r\n\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n\r\n        btnRegistrarProvedor.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.proveedorId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idProveedor = e.currentTarget.dataset.proveedorId;\r\n            alertaEliminarProveedor(idProveedor,e);\r\n        })\r\n\r\n        \r\n     \r\n        \r\n        function alertaEliminarProveedor(id, e){\r\n  \r\n            const proveedor = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al Proveedor <span class=\"font-weight-bold\"> ${proveedor} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarProveedor(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarProveedor(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/proveedor/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaProveedores.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        function mostrarProveedores(){\r\n      \r\n            // $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaProveedores = $('#tabla').DataTable({\r\n                ajax: '/api/proveedores',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaProveedores, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/proveedores',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-proveedor').modal('show');\r\n       \r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCliente();\r\n            }\r\n        }\r\n\r\n        async function consultarCliente(){\r\n            try {\r\n                const respuesta = await fetch(`/api/proveedor?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n                \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            nombre.value = resultado.nombre;\r\n            celular.value = resultado.celular;\r\n            direccion.value = resultado.direccion;\r\n      \r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('celular', (celular.value));\r\n            datos.append('direccion', (direccion.value).trim());\r\n\r\n\r\n          \r\n            \r\n            btnSubmit.disabled = true;\r\n\r\n      \r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/proveedor/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/proveedor/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                    })\r\n                  \r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },0)\r\n                }else{\r\n                    tablaProveedores.ajax.reload()\r\n              \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-proveedor').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n                console.log('error')\r\n                // $(document).Toasts('create', {\r\n                //     class: 'bg-danger',\r\n                //     title: 'Error',\r\n                 \r\n                //     body: 'No es Posible eliminar el proveedor porque tiene productos  asociados'\r\n                //   })\r\n\r\n                // setTimeout(()=>{\r\n                //     eliminarToastAnterior();\r\n                // },8000) \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n        \r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n      \r\n           \r\n             $('#proveedorForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true,\r\n                    minlength: 2  \r\n                },\r\n                celular: {\r\n             \r\n                    digits:true,\r\n                    rangelength: [10, 10]   \r\n                }\r\n              \r\n\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\",\r\n                    minlength: \"Debe tener al menos 2 caracteres\"   \r\n                },\r\n                celular: {\r\n            \r\n                    digits: \"Solo valores númericos\",\r\n                    rangelength:  \"el número de celular debe tener 10 digitos\"\r\n                }\r\n              \r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#proveedorForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const egresos = document.querySelector('#egresos');\r\n    if(egresos){\r\n    \r\n        const btnRegistrarEgreso = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#egresoForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaEgresos;\r\n    \r\n        let id;\r\n        const egreso = document.querySelector('#egreso');\r\n        const descripcion = document.querySelector('#descripcion');\r\n\r\n        egreso.addEventListener('input', function(e){\r\n            egreso.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarEgresos();\r\n      \r\n\r\n        btnRegistrarEgreso.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.egresoId;\r\n         \r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.egresoId;\r\n            alertaEliminarEgreso(id,e);\r\n        }) \r\n      \r\n\r\n        function alertaEliminarEgreso(id,e){\r\n            \r\n            const egreso = e.currentTarget.parentElement.parentElement.parentElement.childNodes[3].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el egreso por un valor de <span class=\"font-weight-bold\"> ${egreso} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarEgreso(id)\r\n                }\r\n            })\r\n        }\r\n    \r\n   \r\n        async function eliminarEgreso(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/egreso/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaEgresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarEgresos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaEgresos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/egresos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            $.ajax({\r\n                url:'/api/egresos',\r\n                dataType:'json',\r\n                success:function(req){\r\n                    console.log(req)\r\n                },\r\n                error:function(error){\r\n                    console.log(error.resposeText)\r\n                }\r\n            })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }   \r\n          \r\n\r\n            datos.append('egreso', egreso.value);\r\n            datos.append('descripcion' , (descripcion.value).trim())\r\n\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/egreso/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/egreso/crear`;\r\n            }\r\n\r\n         \r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n          \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-egreso').modal('hide');\r\n                }else{\r\n                   tablaEgresos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-egreso').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n  \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-egreso').modal('show');\r\n            $('#egresoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#egresoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#egresoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n             \r\n                consultarEgreso();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarEgreso(){\r\n          \r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/egreso?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n               \r\n                llenarFormulario(resultado);\r\n                \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            \r\n\r\n            egreso.value = (parseFloat(resultado.egreso)).toLocaleString('en');\r\n            descripcion.value = resultado.descripcion\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                      \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#egresoForm').validate({\r\n              rules: {\r\n                ingreso: {\r\n                    required: true\r\n                      \r\n                },\r\n                descripcion:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                ingreso: {\r\n                    required: \"El monto que sale de la caja es obligatorio\"  \r\n                },\r\n                descripcion:{\r\n                    required: \"La nota o descripción es obligatoria\"\r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#egresoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const ingresos = document.querySelector('#ingresos');\r\n    if(ingresos){\r\n    \r\n        const btnRegistrarIngreso = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#ingresoForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaIngresos;\r\n    \r\n        let id;\r\n        const ingreso = document.querySelector('#ingreso');\r\n        const descripcion = document.querySelector('#descripcion');\r\n\r\n        ingreso.addEventListener('input', function(e){\r\n            ingreso.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarIngresos();\r\n      \r\n\r\n        btnRegistrarIngreso.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.ingresoId;\r\n         \r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.ingresoId;\r\n            alertaEliminarIngreso(id,e);\r\n        }) \r\n      \r\n\r\n        function alertaEliminarIngreso(id,e){\r\n            \r\n            const ingreso = e.currentTarget.parentElement.parentElement.parentElement.childNodes[3].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el ingreso por un valor de <span class=\"font-weight-bold\"> ${ingreso} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarIngreso(id)\r\n                }\r\n            })\r\n        }\r\n    \r\n        async function cerrarCaja(id){\r\n           \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/cerrar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    tablaIngresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n        async function eliminarIngreso(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/ingreso/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaIngresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarIngresos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaIngresos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/ingresos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            $.ajax({\r\n                url:'/api/ingresos',\r\n                dataType:'json',\r\n                success:function(req){\r\n                 \r\n                },\r\n                error:function(error){\r\n                    \r\n                }\r\n            })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }   \r\n          \r\n\r\n            datos.append('ingreso', ingreso.value);\r\n            datos.append('descripcion' , descripcion.value)\r\n\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/ingreso/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/ingreso/crear`;\r\n            }\r\n\r\n         \r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n          \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-ingreso').modal('hide');\r\n                }else{\r\n                   tablaIngresos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-ingreso').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n  \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-ingreso').modal('show');\r\n            $('#ingresoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#ingresoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#ingresoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n             \r\n                consultarIngreso();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarIngreso(){\r\n          \r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/ingreso?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n               \r\n                llenarFormulario(resultado);\r\n                \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            \r\n\r\n            ingreso.value = (parseFloat(resultado.ingreso)).toLocaleString('en');\r\n            descripcion.value = resultado.descripcion\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                      \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#ingresoForm').validate({\r\n              rules: {\r\n                ingreso: {\r\n                    required: true\r\n                      \r\n                },\r\n                descripcion:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                ingreso: {\r\n                    required: \"El monto que ingresa en la caja es obligatorio\"  \r\n                },\r\n                descripcion:{\r\n                    required: \"La nota o descripción es obligatoria\"\r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#ingresoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const loginForm = document.querySelector('#loginForm');\r\n\r\n    if(loginForm){\r\n\r\n        const email =  document.querySelector('#email');\r\n        const password =  document.querySelector('#password');\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        inicializarValidador();\r\n\r\n\r\n        async function enviarDatos(){\r\n            btnSubmit.disabled=true;\r\n            const datos = new FormData();\r\n            datos.append('email', (email.value).trim())\r\n            datos.append('password', password.value);\r\n            \r\n            try {\r\n                const url = '/api/usuario/login';\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method:'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                elimiarToastAnterior();\r\n                if(resultado.type=='error'){\r\n                    btnSubmit.disabled=false;\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    window.location.href = '/inicio'\r\n                }\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        function elimiarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                 \r\n                enviarDatos();\r\n                    \r\n              }\r\n            });\r\n    \r\n             $('#loginForm').validate({\r\n              rules: {\r\n               \r\n                email: {\r\n                  required: true\r\n                },\r\n                password:{\r\n                    required: true,\r\n                }\r\n              },\r\n              messages: {\r\n               \r\n                email: {\r\n                  required: \"El usuario es obligatorio\"\r\n                },\r\n                password: {\r\n                    required: \"El password es obligatorio\",\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#loginForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","\r\n\r\n(function () {\r\n\r\n    const usuarios = document.querySelector('#usuarios');\r\n    if (usuarios) {\r\n\r\n\r\n        let tablaUsuarios; //para el datatable\r\n        let id = null; //si tengo id es update si no lo tengo es create\r\n\r\n        const btnRegistrarUsuario = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#usuarioForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        const nombre = document.querySelector('#nombre')\r\n        const email = document.querySelector('#email')\r\n        const estado = document.querySelector('#estado')\r\n        const roll = document.querySelector('#roll')\r\n        const password = document.querySelector('#password');\r\n\r\n\r\n        //disparamos el modal\r\n        btnRegistrarUsuario.addEventListener('click', function () {\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        nombre.addEventListener('input', function (e) {\r\n            nombre.value = (e.target.value).toUpperCase();\r\n\r\n        })\r\n\r\n        mostrarUsuarios();\r\n\r\n\r\n\r\n        // function mostrarUsuarios(){\r\n\r\n        //     $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n\r\n        //     tablaUsuarios = $('#tabla').DataTable({\r\n        //         ajax: '/api/usuarios',\r\n        //         \"deferRender\":true,\r\n        //         \"retrieve\":true,\r\n        //         \"proccesing\":true,\r\n        //         responsive:true,\r\n\r\n        //     });\r\n\r\n        // }  \r\n        function mostrarUsuarios() {\r\n            if ($.fn.DataTable.isDataTable('#tabla')) {\r\n                $('#tabla').DataTable().destroy();\r\n            }\r\n\r\n            tablaUsuarios = $('#tabla').DataTable({\r\n                processing: true,\r\n                serverSide: true,\r\n                ajax: {\r\n                    url: '/api/usuarios',\r\n                    type: 'GET'\r\n                },\r\n                responsive: true\r\n            });\r\n        }\r\n\r\n\r\n\r\n        $('#tabla').on('click', '#editar', function (e) {\r\n            id = e.currentTarget.dataset.usuarioId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function (e) {\r\n            const idUsuario = e.currentTarget.dataset.usuarioId;\r\n            alertaEliminarUsuario(idUsuario, e);\r\n        })\r\n\r\n\r\n\r\n        function alertaEliminarUsuario(id, e) {\r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            Swal.fire({\r\n                icon: 'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al usuario <span class=\"font-weight-bold\"> ${nombre} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n\r\n\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    eliminarUsuario(id)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarUsuario(id) {\r\n            const datos = new FormData();\r\n            datos.append('id', id)\r\n            url = `${location.origin}/api/usuario/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    body: datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(() => {\r\n                        eliminarToastAnterior();\r\n                    }, 8000)\r\n\r\n\r\n                    tablaUsuarios.ajax.reload();\r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function accionesModal() {\r\n            $('#usuarioForm').validate().destroy();\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n\r\n            limpiarSelect(estado)\r\n            limpiarSelect(roll)\r\n\r\n            const optionDisabledEstado = document.createElement('OPTION');\r\n            optionDisabledEstado.setAttribute('disabled', 'disabled')\r\n            optionDisabledEstado.setAttribute('selected', 'selected')\r\n            optionDisabledEstado.textContent = '--Seleccione--';\r\n\r\n            const optionEstado = document.createElement('OPTION');\r\n            optionEstado.value = 0;\r\n            optionEstado.textContent = 'Inactivo';\r\n            const optionEstado1 = document.createElement('OPTION');\r\n            optionEstado1.value = 1;\r\n            optionEstado1.textContent = 'Activo';\r\n\r\n            const optionDisabledRoll = document.createElement('OPTION');\r\n            optionDisabledRoll.setAttribute('disabled', 'disabled')\r\n            optionDisabledRoll.setAttribute('selected', 'selected')\r\n            optionDisabledRoll.textContent = '--Seleccione--';\r\n\r\n            const optionRoll = document.createElement('OPTION');\r\n            optionRoll.value = 0;\r\n            optionRoll.textContent = 'Vendedor';\r\n            const optionRoll1 = document.createElement('OPTION');\r\n            optionRoll1.value = 1;\r\n            optionRoll1.textContent = 'Administrador';\r\n\r\n            estado.appendChild(optionDisabledEstado)\r\n            estado.appendChild(optionEstado)\r\n            estado.appendChild(optionEstado1)\r\n            roll.appendChild(optionDisabledRoll)\r\n            roll.appendChild(optionRoll)\r\n            roll.appendChild(optionRoll1)\r\n\r\n            $('#modal-usuario').modal('show');\r\n            inicializarValidador();\r\n            if (id) {\r\n                consultarUsuario();\r\n            }\r\n        }\r\n\r\n        async function consultarUsuario() {\r\n            try {\r\n                const respuesta = await fetch(`/api/usuario?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado) {\r\n\r\n\r\n            nombre.value = resultado.nombre;\r\n            email.value = resultado.email;\r\n\r\n            const optionEstado = estado.querySelector('option[value=\"' + resultado.estado + '\"]');\r\n            optionEstado.setAttribute(\"selected\", \"selected\");\r\n            const optionRoll = roll.querySelector('option[value=\"' + resultado.roll + '\"]');\r\n            optionRoll.setAttribute(\"selected\", \"selected\");\r\n\r\n        }\r\n\r\n\r\n        async function enviarDatos() {\r\n\r\n            const datos = new FormData();\r\n            if (id) {\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('email', email.value);\r\n            datos.append('estado', estado.value);\r\n            datos.append('roll', roll.value);\r\n            datos.append('password', password.value);\r\n\r\n            btnSubmit.disabled = true;\r\n            let url = '';\r\n            if (id) {\r\n                url = `${location.origin}/api/usuario/editar`;\r\n            } else {\r\n                url = `${location.origin}/api/usuario/crear`;\r\n            }\r\n\r\n\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    body: datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                //(Object.keys(resultado)[0])\r\n                console.log(resultado)\r\n                btnSubmit.disabled = false;\r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-primary',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(() => {\r\n                        eliminarToastAnterior();\r\n                    }, 4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-usuario').modal('hide');\r\n                    tablaUsuarios.ajax.reload();\r\n                }\r\n\r\n            } catch (error) {\r\n            }\r\n        }\r\n\r\n\r\n\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarSelect(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n\r\n        }\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n                submitHandler: function () {\r\n\r\n                    enviarDatos();\r\n\r\n\r\n\r\n                }\r\n            });\r\n            let passwordRules = {}\r\n            let passwordMsg = {}\r\n\r\n            if (!id) {\r\n\r\n                passwordRules = {\r\n                    required: true,\r\n                    minlength: 6\r\n                }\r\n                passwordMsg = {\r\n                    required: \"El password es obligatorio\",\r\n                    minlength: \"El Password debe tener al menos 6 caracteres\"\r\n                }\r\n\r\n            }\r\n\r\n            $('#usuarioForm').validate({\r\n                rules: {\r\n                    nombre: {\r\n                        required: true\r\n                    },\r\n                    email: {\r\n                        required: true\r\n                    },\r\n                    estado: {\r\n                        required: true,\r\n                    },\r\n                    roll: {\r\n                        required: true,\r\n                    },\r\n                    password: passwordRules,\r\n                    terms: {\r\n                        required: true\r\n                    },\r\n                },\r\n                messages: {\r\n                    nombre: {\r\n                        required: \"El nombre es obligatorio\"\r\n                    },\r\n                    email: {\r\n                        required: \"El Usuario es obligatorio\"\r\n                    },\r\n                    estado: {\r\n                        required: 'el estado es obligatorio',\r\n                    },\r\n                    roll: {\r\n                        required: 'el Roll es obligatorio',\r\n                    },\r\n                    password: passwordMsg\r\n                },\r\n                errorElement: 'span',\r\n                errorPlacement: function (error, element) {\r\n                    error.addClass('invalid-feedback');\r\n                    element.closest('.form-group').append(error);\r\n                },\r\n                highlight: function (element, errorClass, validClass) {\r\n                    $(element).addClass('is-invalid');\r\n                },\r\n                unhighlight: function (element, errorClass, validClass) {\r\n                    $(element).removeClass('is-invalid');\r\n                }\r\n            });\r\n        };\r\n        $('#usuarioForm').on('valid', function (event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();\r\n\r\n","(function () {\r\n    // window.location.href = '/inicio'\r\n    const seccionCrearVentas = document.querySelector('#seccion-crear-ventas')\r\n    if (seccionCrearVentas) {\r\n\r\n        let ventaId;\r\n        let clienteId = null;\r\n        let productoObj = {\r\n            id: '',\r\n            nombre: '',\r\n            cantidad: '',\r\n            precio_compra: '',\r\n            precio_venta: '', //este es el precio de evnta de esta venta  ya que el usuario puede rebajarle al producto al momento  de venderlo\r\n            // precio: '',\r\n            precio_original: '', //este es el percio de venta con el que se registro el producto\r\n            valor_total: '',\r\n            stock: ''\r\n        }\r\n        let valoresObj = {\r\n            total_sin_descuento: '',\r\n            total_pagar: '',\r\n            descuento: '',\r\n            costo: '',\r\n            total_libre: ''\r\n\r\n\r\n        }\r\n        let idAnterior;\r\n        let focusCantidad = true;\r\n        let productosArray = [];\r\n        let granTotal = 0;\r\n        let listadoProductos;\r\n\r\n\r\n\r\n\r\n\r\n        const selectClientes = document.querySelector('#selectClientes');\r\n        const guardarVentaBtn = document.querySelector('#guardar-venta');\r\n\r\n\r\n        const totalInput = document.querySelector('#total');\r\n        // const totalLibreInput = document.querySelector('#total_libre'); eliminamos mercado libre\r\n        const descuentoInput = document.querySelector('#descuento');\r\n        const totalPagarInput = document.querySelector('#total_pagar');\r\n        const medotodoPago = document.querySelector('#metodo_pago');\r\n        const pagoContado = document.querySelector('#pago-contado');\r\n        const pagoCuotas = document.querySelector('#pago-cuotas');\r\n\r\n        /* pago de contado */\r\n        const cantidadPagar = document.querySelector('#cantidad_pagar');\r\n        const cantidadCambio = document.querySelector('#cantidad_cambio');\r\n\r\n        /* pago a cuotas o credito */\r\n        const abono = document.querySelector('#abono');\r\n        const saldo = document.querySelector('#saldo');\r\n\r\n        //cliente\r\n        const nombreCliente = document.querySelector('#nombre_cliente');\r\n        const cedulaCliente = document.querySelector('#cedula_cliente');\r\n        const celularCliente = document.querySelector('#celular_cliente');\r\n        const direccionCliente = document.querySelector('#direccion_cliente');\r\n        const emailCliente = document.querySelector('#email_cliente');\r\n\r\n        // agregar cliente\r\n        const bntAgregarCliente = document.querySelector('#agregar-cliente');\r\n        const btnQuitarCliente = document.querySelector('#quitar-cliente');\r\n        const contenedorCliente = document.querySelector('#contenedorCliente');\r\n\r\n        //codigo de la venta\r\n        const codigoVenta = document.querySelector('#codigo-venta');\r\n\r\n        const codigoProducto = document.querySelector('#codigo-producto');\r\n        const selectProductos = document.querySelector('#selectProductos');\r\n\r\n        leerDatosUrl();\r\n        consultarProductos();\r\n\r\n        async function consultarProductos() {\r\n\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/productos-ventas`);\r\n                const resultado = await respuesta.json();\r\n                listadoProductos = resultado;\r\n                productoPorCodigo(listadoProductos);\r\n\r\n\r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled = document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un producto--';\r\n                opcionDisabled.value = \"0\";\r\n\r\n                selectProductos.appendChild(opcionDisabled);\r\n                resultado.forEach(producto => {\r\n\r\n                    const opcion = document.createElement('OPTION');\r\n                    opcion.value = producto.id;\r\n                    opcion.textContent = producto.nombre;\r\n\r\n\r\n                    selectProductos.appendChild(opcion)\r\n\r\n                });\r\n\r\n                $('#selectProductos').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n            } catch (error) {\r\n\r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n\r\n\r\n        }\r\n\r\n        function productoPorCodigo(listadoProductos) {\r\n\r\n            codigoProducto.addEventListener('input', function (e) {\r\n                e.preventDefault();\r\n\r\n                const miString = e.target.value\r\n\r\n                //const primerCaracter = miString.charAt(0);\r\n                const primerCaracter = miString\r\n\r\n                // Verificar si el primer carácter es un número\r\n                //if (!isNaN(parseInt(primerCaracter))) {\r\n                if (!(/[^0-9]/.test(primerCaracter))) {\r\n                    const productoSeleccionado = listadoProductos.filter(producto => {\r\n\r\n\r\n                        return producto.codigo.toLowerCase() == e.target.value.toLowerCase()\r\n                    })\r\n\r\n\r\n                    if (productoSeleccionado.length > 0) {\r\n\r\n                        consultarInfoProducto(productoSeleccionado[0].id)\r\n                        e.target.value = '';\r\n                    }\r\n                } else {\r\n\r\n                    codigoProducto.addEventListener('keydown', (e) => {\r\n                        if (e.keyCode == 13) {\r\n                            const productoSeleccionado = listadoProductos.filter(producto => {\r\n\r\n\r\n                                return producto.codigo.toLowerCase() == e.target.value.toLowerCase()\r\n                            })\r\n\r\n\r\n                            if (productoSeleccionado.length > 0) {\r\n\r\n                                consultarInfoProducto(productoSeleccionado[0].id)\r\n                                e.target.value = '';\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n\r\n\r\n\r\n            })\r\n        }\r\n\r\n\r\n\r\n        /* aqui hacemos click ya en el boton guardar venta coo tal y validamos */\r\n        guardarVentaBtn.addEventListener('click', function () {\r\n            revisarVenta();\r\n        })\r\n\r\n        medotodoPago.addEventListener('change', function () {\r\n\r\n            if (contenedorCliente.classList.contains('d-none')) {\r\n                contenedorCliente.classList.remove('d-none');\r\n            }\r\n            if (pagoContado.classList.contains('d-none')) {\r\n                pagoContado.classList.remove('d-none');\r\n            }\r\n            if (pagoCuotas.classList.contains('d-none')) {\r\n                pagoCuotas.classList.remove('d-none');\r\n            }\r\n\r\n\r\n\r\n            if (medotodoPago.value != 1) {\r\n\r\n                abono.value = '';\r\n                saldo.value = valoresObj.total_pagar.toLocaleString('en');\r\n                resetearCliente();\r\n                nombreCliente.readOnly = true;\r\n                cedulaCliente.readOnly = true;\r\n                celularCliente.readOnly = true;\r\n                direccionCliente.readOnly = true;\r\n                emailCliente.readOnly = true;\r\n                btnQuitarCliente.disabled = true;\r\n                pagoContado.classList.add('d-none');\r\n\r\n            } else {\r\n                clienteId = null;\r\n                nombreCliente.readOnly = false;\r\n                cedulaCliente.readOnly = false;\r\n                celularCliente.readOnly = false;\r\n                direccionCliente.readOnly = false;\r\n                emailCliente.readOnly = false;\r\n                btnQuitarCliente.disabled = false;\r\n                contenedorCliente.classList.add('d-none');\r\n                pagoCuotas.classList.add('d-none');\r\n\r\n\r\n\r\n            }\r\n        })\r\n\r\n\r\n        bntAgregarCliente.addEventListener('click', function () {\r\n\r\n            if (contenedorCliente.classList.contains('d-none')) {\r\n\r\n                contenedorCliente.classList.remove('d-none');\r\n            }\r\n        });\r\n\r\n        btnQuitarCliente.addEventListener('click', function () {\r\n            resetearCliente();\r\n            contenedorCliente.classList.add('d-none');\r\n        })\r\n\r\n        cantidadPagar.addEventListener('input', calcularCambio);\r\n\r\n        abono.addEventListener('input', calcularSaldo);\r\n\r\n        totalPagarInput.addEventListener('input', calcularDescuento);\r\n\r\n        $('#selectProductos').on('select2:select', function (e) {\r\n\r\n            consultarInfoProducto(e.target.value)\r\n        });\r\n        $('#selectClientes').on('select2:select', function (e) {\r\n            if (e.target.value != 0) {\r\n\r\n                consultarInfoCliente(e.target.value);\r\n            } else {\r\n                resetearCliente();\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n        async function cargarCodigoVenta() {\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/codigo-venta`);\r\n                const codigo_venta = await respuesta.json();\r\n\r\n                codigoVenta.value = codigo_venta;\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n        //leer el id de la url para saber si es una edicion \r\n        function leerDatosUrl() {\r\n            const urlActual = new URL(window.location);\r\n            const params = new URLSearchParams(urlActual.search);\r\n            if (params.size == 1) {\r\n                ventaId = atob(params.get('id'));\r\n                consultarVenta();\r\n\r\n                consultarCLientes();\r\n\r\n\r\n            } else {\r\n                cargarCodigoVenta()\r\n                consultarCLientes();\r\n            }\r\n\r\n        }\r\n\r\n        /* cundo visitamos una venta existente la consultas */\r\n        async function consultarVenta() {\r\n            const url = `${location.origin}/api/venta?id=${ventaId}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                llenarInformacion(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n        /* esto es para cando estamos editando la venta */\r\n        function llenarInformacion(resultado) {\r\n    \r\n            clienteId = resultado.cliente_id;\r\n\r\n            const productosVenta = resultado.productos_venta\r\n            const venta = resultado.venta;\r\n            codigoVenta.value = venta.codigo;\r\n            // console.log(productosVenta)\r\n            // console.log(venta)\r\n            let total_sin_descuento = 0;\r\n\r\n            productosVenta.forEach(productoVenta => {\r\n                productoObj = {\r\n                    id: productoVenta.id,\r\n                    nombre: productoVenta.nombre,\r\n                    cantidad: productoVenta.cantidad,\r\n                    precio_compra: productoVenta.precio_compra,\r\n                    precio_venta: productoVenta.precio_factura,\r\n                    // precio: productoVenta.precio,\r\n                    precio_original: productoVenta.precio_venta,\r\n                    valor_total: productoVenta.precio_factura * productoVenta.cantidad,\r\n                    stock: parseFloat(productoVenta.stock) + parseFloat(productoVenta.cantidad)\r\n\r\n                }\r\n                total_sin_descuento = parseFloat(total_sin_descuento) + parseFloat(productoVenta.precio_venta) * productoVenta.cantidad\r\n                productosArray.push(productoObj)\r\n                // total_sin_descuento = total_sin_descuento+productoVenta.precio_venta;\r\n            })\r\n\r\n            // valoresObj={\r\n            //     total_sin_descuento,\r\n            //     total_pagar:venta.recaudo,\r\n            //     descuento:venta.descuento,\r\n            //     costo:venta.costo\r\n\r\n\r\n            // }\r\n            mostrarProductos();\r\n\r\n            totalInput.value = total_sin_descuento.toLocaleString('en');\r\n            descuentoInput.value = resultado.venta.descuento + \"%\";\r\n            totalPagarInput.value = parseFloat(resultado.venta.total_factura).toLocaleString('en');\r\n\r\n            if (venta.nombre_cliente != '' || venta.cedula_cliente != '' || venta.celular_cliente != '' || venta.direccion_cliente != '' || venta.nombre != undefined) {\r\n                contenedorCliente.classList.remove('d-none');\r\n                nombreCliente.value = venta.nombre_cliente;\r\n                cedulaCliente.value = venta.cedula_cliente;\r\n                celularCliente.value = venta.celular_cliente;\r\n                direccionCliente.value = venta.direccion_cliente;\r\n                emailCliente.value = venta.email_cliente;\r\n            }\r\n\r\n            if (venta.metodo_pago == 2 || venta.metodo_pago == 3) {\r\n                let optionToSelect = '';\r\n\r\n                if (venta.metodo_pago == 2) {\r\n                    optionToSelect = document.querySelector('#metodo_pago option[value=\"2\"]');\r\n                } else {\r\n                    optionToSelect = document.querySelector('#metodo_pago option[value=\"3\"]');\r\n                }\r\n\r\n                optionToSelect.selected = true;\r\n          \r\n                abono.value = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n                saldo.value = (venta.total_factura - venta.recaudo).toLocaleString('en');\r\n                pagoContado.classList.add('d-none');\r\n                pagoCuotas.classList.remove('d-none');\r\n\r\n\r\n            }\r\n        }\r\n\r\n        function revisarVenta() {\r\n\r\n            if (productosArray.length == 0) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n\r\n                    text: 'No Hay productos agregados a esta venta',\r\n\r\n                })\r\n                return;\r\n            }\r\n         \r\n            if (medotodoPago.value == 2) {\r\n                if (selectClientes.value == 0) {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n\r\n                        text: 'Para las ventas a credito o de mercado libre es necesario seleccionar un cliente que se encuentre registrado',\r\n\r\n                    })\r\n                    return;\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n            enviarInformacion();\r\n\r\n        }\r\n        async function enviarInformacion() {\r\n\r\n      \r\n            console.log(valoresObj)\r\n\r\n            const datos = new FormData();\r\n            if (ventaId) {\r\n                datos.append('id', ventaId);\r\n            }\r\n            datos.append('productosArray', JSON.stringify(productosArray));\r\n            datos.append('total_factura', valoresObj.total_pagar); //total de esta venta\r\n            datos.append('total', valoresObj.total_sin_descuento); //total de sin descuento\r\n\r\n            datos.append('costo', valoresObj.costo);\r\n            datos.append('descuento', valoresObj.descuento);\r\n            datos.append('metodo_pago', medotodoPago.value);\r\n            if (medotodoPago.value != 1) {\r\n                valor_abono = 0;\r\n                if (abono.value != '') {\r\n                    valor_abono = abono.value;\r\n                }\r\n                datos.append('abono', valor_abono);\r\n                datos.append('saldo', saldo.value);\r\n                datos.append('cliente_id', selectClientes.value)\r\n                datos.append('recaudo', valor_abono);\r\n                if (parseFloat(valor_abono) < parseFloat(valoresObj.total_pagar)) {\r\n                    datos.append('pagado', 0);\r\n                } else {\r\n                    datos.append('pagado', 1);\r\n                }\r\n\r\n            } else {\r\n                datos.append('pagado', 1);\r\n                datos.append('recaudo', valoresObj.total_pagar);\r\n            }\r\n\r\n\r\n            datos.append('nombre_cliente', nombreCliente.value)\r\n            datos.append('cedula_cliente', cedulaCliente.value)\r\n            datos.append('celular_cliente', celularCliente.value)\r\n            datos.append('direccion_cliente', direccionCliente.value);\r\n            datos.append('email_cliente', emailCliente.value);\r\n          \r\n\r\n            let url;\r\n            if (ventaId) {\r\n                url = `${location.origin}/api/editar-venta`;\r\n            } else {\r\n                url = `${location.origin}/api/crear-venta`;\r\n            }\r\n\r\n            // guardarVentaBtn.disabled = true;\r\n            try {\r\n\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                });\r\n              \r\n                const resultado = await respuesta.json();\r\n                console.log(resultado)\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n\r\n\r\n\r\n                    resetearVentaAnterior();\r\n                }\r\n                guardarVentaBtn.disabled = false;\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n\r\n        }\r\n\r\n        function resetearVentaAnterior() {\r\n            ventaId = null;\r\n            productosArray = [];\r\n            productoObj = {\r\n                id: '',\r\n                nombre: '',\r\n                cantidad: '',\r\n                precio_compra: '',\r\n                precio_venta: '',\r\n\r\n                precio_original: '',\r\n                valor_total: '',\r\n                stock: ''\r\n            }\r\n            valoresObj = {\r\n                total_sin_descuento: '',\r\n                total_pagar: '',\r\n                descuento: '',\r\n                costo: ''\r\n\r\n\r\n            }\r\n\r\n            const selectProductos = $('#selectProductos');\r\n\r\n            const selectClientes = $('#selectClientes');\r\n\r\n            selectProductos.val(\"0\").trigger('change.select2');\r\n\r\n            selectClientes.val(\"0\").trigger('change.select2');\r\n\r\n\r\n\r\n            medotodoPago.innerHTML = `\r\n                <option value=\"1\">Pago e Contado</option>\r\n                <option value=\"2\">Pago a Cuotas</option>\r\n                <option value=\"3\">Mercado Libre</option>\r\n            `\r\n\r\n            cantidadPagar.value = '';\r\n            cantidadCambio.value = '';\r\n            abono.value = '';\r\n            saldo.value = '';\r\n            if (!contenedorCliente.classList.contains('d-none')) {\r\n                contenedorCliente.classList.add('d-none');\r\n            }\r\n            const pagoContado = document.querySelector('#pago-contado');\r\n            const pagoCuotas = document.querySelector('#pago-cuotas');\r\n            if (!pagoCuotas.classList.contains('d-none')) {\r\n                pagoCuotas.classList.add('d-none');\r\n            }\r\n            if (pagoContado.classList.contains('d-none')) {\r\n\r\n                pagoContado.classList.remove('d-none');\r\n            }\r\n\r\n\r\n            cargarCodigoVenta();\r\n            resetearCliente();\r\n            mostrarProductos();\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        async function consultarInfoCliente(id) {\r\n\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/cliente?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n\r\n\r\n\r\n                    setTimeout(() => {\r\n                        eliminarToastAnterior();\r\n                    }, 4000)\r\n\r\n\r\n                    imprimirDatosCliente(resultado);\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        function imprimirDatosCliente(cliente) {\r\n\r\n            nombreCliente.value = cliente.nombre ?? '';\r\n            cedulaCliente.value = cliente.cedula ?? '';\r\n            celularCliente.value = cliente.celular ?? '';\r\n            direccionCliente.value = cliente.direccion ?? '';\r\n            emailCliente.value = cliente.email ?? '';\r\n        }\r\n\r\n\r\n        function resetearCliente() {\r\n            var selectClientes = $('#selectClientes');\r\n            selectClientes.val(\"0\").trigger('change.select2');\r\n            nombreCliente.value = \"\";\r\n            cedulaCliente.value = \"\";\r\n            celularCliente.value = \"\";\r\n            direccionCliente.value = \"\";\r\n            emailCliente.value = \"\";\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        function calcularCambio(e) {\r\n            cantidadPagar.value = formatearValor(e.target.value);\r\n            const valor_pagar = parseFloat((cantidadPagar.value).replace(/,/g, ''));\r\n            const cambio = valor_pagar - valoresObj.total_pagar;\r\n            cantidadCambio.value = cambio.toLocaleString('en')\r\n\r\n        }\r\n        function calcularSaldo(e) {\r\n\r\n            abono.value = formatearValor(e.target.value);\r\n            const valor_abono = parseFloat((abono.value).replace(/,/g, ''));\r\n            const deuda = valoresObj.total_pagar - valor_abono;\r\n            saldo.value = deuda.toLocaleString('en')\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        function mostrarProductos() {\r\n            const contenedorProductos = document.querySelector('#productosVenta');\r\n            limpiarHtml(contenedorProductos);\r\n            productosArray.forEach(producto => {\r\n                const { id, nombre, precio_venta, cantidad, valor_total, stock } = producto;\r\n          \r\n\r\n                const rowDiv = document.createElement('DIV');\r\n                rowDiv.classList.add('row', 'px-2');\r\n                rowDiv.dataset.productoId = id;\r\n\r\n                //Producto\r\n\r\n                const col1Div = document.createElement('DIV');\r\n                col1Div.classList.add('col-sm-4');\r\n\r\n                const group1Div = document.createElement('DIV');\r\n                group1Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend1Div = document.createElement('DIV');\r\n                prepend1Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend1Div.innerHTML = `<span class=\"input-group-text bg-icono btn pointer\"><i class=\"fa-solid fa-trash text-danger\"></i></span>`;\r\n                prepend1Div.onclick = () => {\r\n\r\n                    eliminarProducto(id);\r\n                }\r\n\r\n                const inputNombre = document.createElement('INPUT');\r\n                inputNombre.type = 'text';\r\n                inputNombre.classList.add('form-control');\r\n                inputNombre.readOnly = true;\r\n                inputNombre.value = nombre;\r\n                inputNombre.dataset.productoId = id;\r\n\r\n\r\n                const col7Div = document.createElement('DIV');\r\n                col7Div.classList.add('col-sm-2');\r\n\r\n                const group7Div = document.createElement('DIV');\r\n                group7Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend7Div = document.createElement('DIV');\r\n                prepend7Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend7Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-hashtag text-azul\"></i></i></span>`;\r\n\r\n\r\n                const inputStock = document.createElement('INPUT');\r\n                inputStock.type = 'text';\r\n                inputStock.classList.add('form-control');\r\n                inputStock.readOnly = true;\r\n                inputStock.value = stock;\r\n                inputStock.dataset.productoId = id;\r\n\r\n\r\n                group1Div.appendChild(prepend1Div);\r\n                group1Div.appendChild(inputNombre);\r\n                col1Div.appendChild(group1Div);\r\n                group7Div.appendChild(prepend7Div);\r\n                group7Div.appendChild(inputStock);\r\n\r\n\r\n                col7Div.appendChild(group7Div);\r\n\r\n                //cantidad\r\n\r\n                const col2Div = document.createElement('DIV');\r\n                col2Div.classList.add('col-sm-2');\r\n\r\n                const group2Div = document.createElement('DIV');\r\n                group2Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend2Div = document.createElement('DIV');\r\n                prepend2Div.classList.add('input-group-prepend');\r\n\r\n                prepend2Div.dataset.productoId = id;\r\n                prepend2Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-hashtag text-azul\"></i></i></span>`;\r\n\r\n\r\n\r\n                const inputCantidad = document.createElement('INPUT');\r\n                inputCantidad.type = 'number';\r\n                inputCantidad.classList.add('form-control');\r\n                // inputCantidad.min = 1;\r\n\r\n                inputCantidad.value = cantidad;\r\n\r\n\r\n                if (idAnterior == id && focusCantidad == true) {\r\n\r\n                    // inputPrecio.selectionStart = inputPrecio.value.length;\r\n                    // inputPrecio.selectionEnd = inputPrecio.value.length;\r\n\r\n                    // Enfoca el elemento input\r\n                    setTimeout(function () {\r\n                        inputCantidad.focus();\r\n                    }, 0);\r\n\r\n                }\r\n\r\n                inputCantidad.oninput = function () {\r\n\r\n                    if (parseFloat(inputCantidad.value) > parseFloat(stock)) {\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n                            text: 'el producto está agotado',\r\n\r\n                        })\r\n                        modificarTotalPorProducto(stock, id, true);\r\n                    } else {\r\n                        modificarTotalPorProducto(inputCantidad.value, id, true); //modificamos el total al moficiar la cantidad\r\n                    }\r\n\r\n\r\n                };\r\n\r\n                group2Div.appendChild(prepend2Div);\r\n                group2Div.appendChild(inputCantidad);\r\n                col2Div.appendChild(group2Div);\r\n\r\n                //precio sin comision para cuando se usa mercado libre\r\n\r\n                // const col5Div = document.createElement('DIV');\r\n                // col5Div.classList.add('col-sm-2');\r\n                // const group5Div = document.createElement('DIV');\r\n                // group5Div.classList.add('input-group', 'mb-3');\r\n\r\n                // const prepend5Div = document.createElement('DIV');\r\n                // prepend5Div.classList.add('input-group-prepend');\r\n                // prepend5Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                // const inputPrecioLibre = document.createElement('INPUT');\r\n                // inputPrecioLibre.type = 'text';\r\n                // inputPrecioLibre.classList.add('form-control');\r\n                // inputPrecioLibre.value = parseFloat(precio).toLocaleString('en');\r\n\r\n\r\n                // group5Div.appendChild(prepend5Div);\r\n                // group5Div.appendChild(inputPrecioLibre);\r\n                // col5Div.appendChild(group5Div);\r\n\r\n                // inputPrecioLibre.oninput = () => {\r\n\r\n                //     console.log(inputPrecioLibre.value)\r\n                //     const nuevo_precio_venta = formatearValor(inputPrecioLibre.value);\r\n                //     inputPrecioLibre.value = nuevo_precio_venta;\r\n                //     producto.precio = parseFloat((nuevo_precio_venta).replace(/,/g, ''));\r\n\r\n                //     total_libre = 0;\r\n                //     productosArray.forEach(producto => {\r\n                //         total_libre = total_libre + producto.precio * producto.cantidad;\r\n                //     })\r\n                //     valoresObj.total_libre = total_libre;\r\n                //     totalLibreInput.value = total_libre.toLocaleString('en');\r\n                // }\r\n\r\n\r\n\r\n                //precio unitario para factura\r\n\r\n                const col3Div = document.createElement('DIV');\r\n                col3Div.classList.add('col-sm-2');\r\n\r\n                const group3Div = document.createElement('DIV');\r\n                group3Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend3Div = document.createElement('DIV');\r\n                prepend3Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend3Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecio = document.createElement('INPUT');\r\n                inputPrecio.type = 'text';\r\n                inputPrecio.classList.add('form-control');\r\n                inputPrecio.value = parseFloat(precio_venta).toLocaleString('en');\r\n\r\n\r\n                if (idAnterior == id && focusCantidad == false) {\r\n\r\n                    // inputPrecio.selectionStart = inputPrecio.value.length;\r\n                    // inputPrecio.selectionEnd = inputPrecio.value.length;\r\n\r\n                    // Enfoca el elemento input\r\n                    setTimeout(function () {\r\n                        inputPrecio.focus();\r\n                    }, 0);\r\n\r\n                }\r\n\r\n                /* este sera el precio de venta como tal para la venta ya que el usuario puede editarlo al momento de venderlo */\r\n                inputPrecio.oninput = () => {\r\n                    console.log(inputPrecio.value)\r\n                    const nuevo_precio_venta = formatearValor(inputPrecio.value);\r\n                    inputPrecio.value = nuevo_precio_venta;\r\n                    // inputPrecioLibre.value = nuevo_precio_venta\r\n                    // producto.precio = parseFloat((nuevo_precio_venta).replace(/,/g, ''));\r\n                    modificarTotalPorProducto(inputPrecio.value, id, false)\r\n                }\r\n                inputPrecio.focus()\r\n\r\n                group3Div.appendChild(prepend3Div);\r\n                group3Div.appendChild(inputPrecio);\r\n                col3Div.appendChild(group3Div);\r\n\r\n                //precio cantidad\r\n                const col4Div = document.createElement('DIV');\r\n                col4Div.classList.add('col-sm-2');\r\n\r\n                const group4Div = document.createElement('DIV');\r\n                group4Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend4Div = document.createElement('DIV');\r\n                prepend4Div.classList.add('input-group-prepend');\r\n\r\n                prepend4Div.dataset.productoId = id;\r\n                prepend4Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecioCantidad = document.createElement('INPUT');\r\n                inputPrecioCantidad.type = 'text';\r\n                inputPrecioCantidad.readOnly = true;\r\n                inputPrecioCantidad.classList.add('form-control');\r\n                inputPrecioCantidad.value = parseFloat(valor_total).toLocaleString('en');\r\n\r\n\r\n                group4Div.appendChild(prepend4Div);\r\n                group4Div.appendChild(inputPrecioCantidad);\r\n                col4Div.appendChild(group4Div);\r\n\r\n\r\n\r\n                rowDiv.appendChild(col1Div);\r\n                rowDiv.appendChild(col7Div);\r\n                rowDiv.appendChild(col2Div);\r\n                // rowDiv.appendChild(col5Div);\r\n                rowDiv.appendChild(col3Div);\r\n                rowDiv.appendChild(col4Div);\r\n\r\n\r\n                contenedorProductos.appendChild(rowDiv)\r\n\r\n                //resetar los inputs de metodo de pago\r\n                resetarInputsMetodoPago();\r\n\r\n\r\n\r\n            });\r\n\r\n            calcularTotal();\r\n\r\n        }\r\n\r\n        function resetarInputsMetodoPago() {\r\n\r\n            cantidadPagar.value = '';\r\n            cantidadCambio.value = '';\r\n            abono.value = '';\r\n            saldo.value = valoresObj.total_pagar.toLocaleString('en');\r\n        }\r\n        function calcularTotal() {\r\n    \r\n\r\n            let total = 0; //valor a pagar con el precio de venta original\r\n            let total_pagar = 0; //valor a pagar con modificaciones de precios \r\n            let total_costo = 0;\r\n            // let total_libre = 0;\r\n            productosArray.forEach(producto => {\r\n\r\n                total = total + producto.cantidad * producto.precio_original;\r\n                total_pagar = total_pagar + producto.cantidad * producto.precio_venta;\r\n                total_costo = total_costo + producto.cantidad * producto.precio_compra;\r\n                // total_libre = total_libre + producto.cantidad * producto.precio;\r\n            })\r\n          \r\n\r\n            const descuento = 100 - total_pagar * 100 / total;\r\n            descuentoInput.value = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) + '%' : 0 + '%';\r\n\r\n            totalInput.value = total.toLocaleString('en');\r\n             \r\n            totalPagarInput.value = total_pagar.toLocaleString('en');\r\n                        \r\n            // totalLibreInput.value = total_libre.toLocaleString('en'); // lo elimina porque ya no existe\r\n        \r\n\r\n            //llenamos el objeto con la informacion del pago de la venta\r\n            valoresObj.total_sin_descuento = total;\r\n            valoresObj.total_pagar = total_pagar;\r\n            valoresObj.descuento = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) : 0;\r\n            valoresObj.costo = total_costo;\r\n            // valoresObj.total_libre = total_libre;\r\n\r\n\r\n        }\r\n\r\n        function calcularDescuento(e) { //calculamos el descuento cuando se modifica el precio final\r\n            if (productosArray.length == 0) {\r\n                totalPagarInput.value = 0;\r\n                return;\r\n            }\r\n\r\n            totalPagarInput.value = formatearValor(e.target.value);\r\n            const total_pagar = parseFloat((totalPagarInput.value).replace(/,/g, ''));\r\n\r\n            let total = 0;\r\n            productosArray.forEach(producto => {\r\n                total = total + producto.cantidad * producto.precio_original;\r\n\r\n            })\r\n            const descuento = 100 - total_pagar * 100 / total;\r\n\r\n            descuentoInput.value = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) + '%' : 0 + '%';\r\n\r\n\r\n            //lenamos el objeto que tien la infomracion del pago \r\n            valoresObj.total_pagar = total_pagar;\r\n            valoresObj.descuento = descuento;\r\n\r\n            resetarInputsMetodoPago();\r\n\r\n\r\n        }\r\n\r\n\r\n        //modificar valores al cambiar la cantidad\r\n        function modificarTotalPorProducto(parametro, id, aux) {\r\n            idAnterior = id;\r\n            if (aux) {\r\n                focusCantidad = true;\r\n                productosArray = productosArray.map(producto => {\r\n                    if (producto.id == id) {\r\n\r\n                        if (parametro < 0) {\r\n\r\n                            parametro = 0;\r\n                        }\r\n                        return {\r\n                            ...producto,\r\n                            cantidad: parametro,\r\n                            valor_total: parametro * producto.precio_venta,\r\n\r\n                        }\r\n\r\n                    }\r\n                    return producto;\r\n                })\r\n\r\n            } else {\r\n\r\n                focusCantidad = false;\r\n                let nuevo_precio_venta = parseFloat(parametro.replace(/,/g, ''));\r\n                productosArray = productosArray.map(producto => {\r\n                    if (producto.id == id) {\r\n                        if (parametro == '') {\r\n\r\n                            parametro = 0;\r\n                        }\r\n\r\n                        if (!isNaN(nuevo_precio_venta * producto.cantidad)) {\r\n\r\n                            return {\r\n                                ...producto,\r\n                                precio_venta: nuevo_precio_venta,\r\n                                valor_total: nuevo_precio_venta * producto.cantidad\r\n\r\n                            }\r\n\r\n                        } else {\r\n\r\n                            return {\r\n                                ...producto,\r\n                                precio_venta: 0,\r\n                                valor_total: 0\r\n\r\n                            }\r\n                        }\r\n\r\n\r\n                    }\r\n                    return producto;\r\n                })\r\n\r\n            }\r\n\r\n\r\n            mostrarProductos();\r\n        }\r\n\r\n\r\n        //eliminar producto de la venta\r\n\r\n        function eliminarProducto(idProducto) {\r\n\r\n            productosArray = productosArray.filter(producto => {\r\n                return producto.id != idProducto\r\n            })\r\n\r\n            mostrarProductos();\r\n        }\r\n\r\n        async function consultarInfoProducto(id) {\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/producto?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n\r\n                if (resultado.stock > 0) {\r\n                    const { id, nombre, precio_venta, stock, precio_compra } = resultado;\r\n                    productoObj = {\r\n                        id,\r\n                        nombre,\r\n                        cantidad: 1,\r\n                        precio_compra,\r\n                        precio_venta,\r\n                        // precio: parseFloat(precio_venta),    //esto lo quitaos porque es paramercado libre\r\n                        precio_original: parseFloat(precio_venta),\r\n                        valor_total: precio_venta,\r\n                        stock\r\n                    }\r\n\r\n                    const existe_producto = productosArray.some(producto => producto.id == id);\r\n\r\n                    if (!existe_producto) {\r\n                        productosArray.push(productoObj);\r\n                        mostrarProductos();\r\n                    } else {\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n\r\n                            text: 'el producto ya ha sido agregado anteriormente',\r\n\r\n                        })\r\n                    }\r\n                } else {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n\r\n                        text: 'Producto no disponible en inventario',\r\n\r\n                    })\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n            // console.log(productosArray)\r\n        }\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n        function limpiarHtml(referencia) {\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        async function consultarCLientes() {\r\n            limpiarHtml(selectClientes);\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/clientes-ventas`);\r\n                const resultado = await respuesta.json();\r\n\r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled = document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un cliente--';\r\n                opcionDisabled.value = \"0\";\r\n\r\n\r\n\r\n\r\n\r\n                resultado.forEach(cliente => {\r\n\r\n                    const opcion = document.createElement('OPTION');\r\n                    opcion.value = cliente.id;\r\n                    opcion.textContent = cliente.nombre;\r\n\r\n                    if (cliente.id == clienteId) {\r\n\r\n                        opcion.selected = true;\r\n                    }\r\n\r\n                    selectClientes.appendChild(opcion)\r\n\r\n                });\r\n\r\n                $('#selectClientes').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n                consultarInfoCliente(clienteId);\r\n            } catch (error) {\r\n\r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n\r\n\r\n        }\r\n    }\r\n})();\r\n\r\n\r\n","(function () {\r\n    const mercadolibre = document.querySelector('#mercadolibre');\r\n    const ventas = document.querySelector('#ventas');\r\n    if (mercadolibre || ventas) {\r\n\r\n        $('#tabla').on('click', '#info', function (e) {\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n \r\n            consultarInfoVenta(ventaId);\r\n        })\r\n        async function consultarInfoVenta(id) {\r\n         \r\n            $('#modal-info').modal('show');\r\n\r\n            const url = `${location.origin}/api/venta?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n            \r\n                mostrarInfoVenta(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        function mostrarInfoVenta(resultado) {\r\n            const { productos_venta , venta} = resultado\r\n      \r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const total = document.querySelector('#total'); //total de la venta ya aplicando el descuento\r\n            const totalSInDescuento = document.querySelector('#total-sin-descuento');  //total de la venta sin descuento \r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n            const metodoVenta = document.querySelector('#metodo-venta');\r\n            const estadoVenta = document.querySelector('#estado-venta');\r\n            \r\n            codigoVenta.textContent = venta.codigo\r\n            clienteVenta.textContent = venta.nombre_cliente\r\n            fechaVenta.textContent = venta.fecha\r\n            totalVenta.textContent = (parseFloat(venta.total_factura)).toLocaleString('en');\r\n            total.textContent = (parseFloat(venta.total)).toLocaleString('en');\r\n            totalSInDescuento.textContent = (parseFloat(venta.descuento)).toLocaleString('en')+\"%\";\r\n            recaudoVenta.textContent = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(venta.total_factura - venta.recaudo)).toLocaleString('en');\r\n         \r\n         \r\n            if(venta.metodo_pago==2){\r\n                metodoVenta.textContent = 'Fiado'\r\n            }\r\n            // if(venta.metodo_pago==3){\r\n            //     metodoVenta.textContent = 'Mercad Libre'\r\n            // }\r\n            if(venta.metodo_pago==1){\r\n                metodoVenta.textContent = 'De Contado'\r\n            }\r\n            if(estadoVenta.classList.contains('text-danger')){\r\n                estadoVenta.classList.remove('text-danger')\r\n            }\r\n            if(estadoVenta.classList.contains('text-success')){\r\n                estadoVenta.classList.remove('text-success')\r\n            }\r\n            if(venta.pagado==0){\r\n                estadoVenta.textContent = 'Pendiente'\r\n                estadoVenta.classList.add('text-danger')\r\n            }else{\r\n                estadoVenta.textContent = 'Pagado'\r\n                estadoVenta.classList.add('text-success')\r\n            }\r\n\r\n            \r\n            const bodyProductos = document.querySelector('#body-productos-venta');\r\n            limpiarHtml(bodyProductos);\r\n\r\n         \r\n\r\n         \r\n            productos_venta.forEach(producto => {\r\n                \r\n                const { nombre, cantidad, precio_factura } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio_factura)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio_factura * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n            \r\n        }\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n    }\r\n})();","(function () {\r\n  const reporte = document.querySelector('#reportes');\r\n  if (reporte) {\r\n\r\n    //mostrarGraficos();\r\n\r\n    function mostrarGraficos() {\r\n\r\n      var ticksStyle = {\r\n        fontColor: '#495057',\r\n        fontStyle: 'bold'\r\n      }\r\n\r\n      var mode = 'index'\r\n      var intersect = true\r\n\r\n\r\n      var $ultimo_year = $('#ultimo-year')\r\n      // eslint-disable-next-line no-unused-vars\r\n      var ultimo_year = new Chart($ultimo_year, {\r\n        type: 'bar',\r\n        data: {\r\n          labels: ['JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\r\n          datasets: [\r\n            {\r\n              backgroundColor: '#007bff',\r\n              borderColor: '#007bff',\r\n              data: [1000, 2000, 3000, 2500, 2700, 2500, 3000]\r\n            },\r\n            {\r\n              backgroundColor: '#ced4da',\r\n              borderColor: '#ced4da',\r\n              data: [700, 1700, 2700, 2000, 1800, 1500, 2000]\r\n            }\r\n          ]\r\n        },\r\n        options: {\r\n          maintainAspectRatio: false,\r\n          tooltips: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          hover: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              // display: false,\r\n              gridLines: {\r\n                display: true,\r\n                lineWidth: '4px',\r\n                color: 'rgba(0, 0, 0, .2)',\r\n                zeroLineColor: 'transparent'\r\n              },\r\n              ticks: $.extend({\r\n                beginAtZero: true,\r\n\r\n                // Include a dollar sign in the ticks\r\n                callback: function (value) {\r\n                  if (value >= 1000) {\r\n                    value /= 1000\r\n                    value += 'k'\r\n                  }\r\n\r\n                  return '$' + value\r\n                }\r\n              }, ticksStyle)\r\n            }],\r\n            xAxes: [{\r\n              display: true,\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: ticksStyle\r\n            }]\r\n          }\r\n        }\r\n      })\r\n\r\n      var $ultima_semana = $('#ultima-semana')\r\n      // eslint-disable-next-line no-unused-vars\r\n      var ultima_semana = new Chart($ultima_semana, {\r\n        data: {\r\n          labels: ['18th', '20th', '22nd', '24th', '26th', '28th', '30th'],\r\n          datasets: [{\r\n            type: 'line',\r\n            data: [100, 120, 170, 167, 180, 177, 160],\r\n            backgroundColor: 'transparent',\r\n            borderColor: '#007bff',\r\n            pointBorderColor: '#007bff',\r\n            pointBackgroundColor: '#007bff',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#007bff',\r\n            // pointHoverBorderColor    : '#007bff'\r\n          },\r\n          {\r\n            type: 'line',\r\n            data: [60, 80, 70, 67, 80, 77, 100],\r\n            backgroundColor: 'tansparent',\r\n            borderColor: '#ced4da',\r\n            pointBorderColor: '#ced4da',\r\n            pointBackgroundColor: '#ced4da',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#ced4da',\r\n            // pointHoverBorderColor    : '#ced4da'\r\n          }]\r\n        },\r\n        options: {\r\n          maintainAspectRatio: false,\r\n          tooltips: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          hover: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              // display: false,\r\n              gridLines: {\r\n                display: true,\r\n                lineWidth: '4px',\r\n                color: 'rgba(0, 0, 0, .2)',\r\n                zeroLineColor: 'transparent'\r\n              },\r\n              ticks: $.extend({\r\n                beginAtZero: true,\r\n                suggestedMax: 200\r\n              }, ticksStyle)\r\n            }],\r\n            xAxes: [{\r\n              display: true,\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: ticksStyle\r\n            }]\r\n          }\r\n        }\r\n      })\r\n\r\n      var $ultimo_mes = $('#ultimo-mes')\r\n      // eslint-disable-next-line no-unused-vars\r\n      var ultimo_mes = new Chart($ultimo_mes, {\r\n        data: {\r\n          labels: ['18th', '20th', '22nd', '24th', '26th', '28th', '30th'],\r\n          datasets: [{\r\n            type: 'line',\r\n            data: [100, 120, 170, 167, 180, 177, 160],\r\n            backgroundColor: 'transparent',\r\n            borderColor: '#007bff',\r\n            pointBorderColor: '#007bff',\r\n            pointBackgroundColor: '#007bff',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#007bff',\r\n            // pointHoverBorderColor    : '#007bff'\r\n          },\r\n          {\r\n            type: 'line',\r\n            data: [60, 80, 70, 67, 80, 77, 100],\r\n            backgroundColor: 'tansparent',\r\n            borderColor: '#ced4da',\r\n            pointBorderColor: '#ced4da',\r\n            pointBackgroundColor: '#ced4da',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#ced4da',\r\n            // pointHoverBorderColor    : '#ced4da'\r\n          }]\r\n        },\r\n        options: {\r\n          maintainAspectRatio: false,\r\n          tooltips: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          hover: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              // display: false,\r\n              gridLines: {\r\n                display: true,\r\n                lineWidth: '4px',\r\n                color: 'rgba(0, 0, 0, .2)',\r\n                zeroLineColor: 'transparent'\r\n              },\r\n              ticks: $.extend({\r\n                beginAtZero: true,\r\n                suggestedMax: 200\r\n              }, ticksStyle)\r\n            }],\r\n            xAxes: [{\r\n              display: true,\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: ticksStyle\r\n            }]\r\n          }\r\n        }\r\n      })\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n})();\r\n\r\n// lgtm [js/unused-local-variable]\r\n","(function(){\r\n\r\n  \r\n    const reporte = document.querySelector('#reporte');\r\n    if(reporte){\r\n        const ingresos = document.querySelector('#reporte_ingresos')\r\n        const ganancias = document.querySelector('#reporte_ganancias')\r\n        const costos = document.querySelector('#reporte_costos')\r\n        const inventario = document.querySelector('#reporte_inventario')\r\n        // const ingresos_reales = document.querySelector('#reporte_ingresos_reales')\r\n        // const ganancias_reales = document.querySelector('#reporte_ganancias_reales')\r\n        const dinero_fiados = document.querySelector('#reporte_dinero_fiados')\r\n        const numero_ventas = document.querySelector('#reporte_numero_ventas')\r\n        const numero_fiados = document.querySelector('#reporte_numero_fiados')\r\n        const numero_pagos = document.querySelector('#reporte_numero_pagos')\r\n        const numero_cajas = document.querySelector('#reporte_numero_cajas')\r\n        const numero_productos = document.querySelector('#reporte_numero_productos')\r\n        const numero_clientes = document.querySelector('#reporte_numero_clientes')\r\n\r\n        const fecha = document.querySelector('#fecha');\r\n        fecha.addEventListener('input',function(e){\r\n        \r\n            cargarInformacion(e.target.value);\r\n        })\r\n    \r\n\r\n        llenarIputFecha();\r\n\r\n        function llenarIputFecha(){\r\n            const fecha_actual_utc = new Date();\r\n\r\n            // Ajustar al huso horario de Colombia (UTC-5)\r\n            const fecha_actual_colombia = new Date(fecha_actual_utc.getTime() - (5 * 60 * 60 * 1000));\r\n        \r\n            // Formatear la fecha y asignarla al input\r\n            const fecha_actual_formateada = fecha_actual_colombia.toISOString().slice(0, 10);\r\n            fecha.value = fecha_actual_formateada;\r\n        \r\n            // Cargar información con la fecha ajustada\r\n            cargarInformacion(fecha.value);\r\n        }\r\n\r\n       \r\n\r\n        function mostrarInfo(resultado){\r\n   \r\n            ingresos.textContent = resultado.ingresos_totales\r\n            ganancias.textContent = resultado.ganancias\r\n            costos.textContent = resultado.costos\r\n            inventario.textContent = resultado.total_inventario\r\n            // ingresos_reales.textContent = resultado.ingresos_reales\r\n            // ganancias_reales.textContent = resultado.ganancias_reales\r\n            // dinero_fiados.textContent = resultado.fiados\r\n            numero_ventas.textContent = resultado.numero_ventas\r\n            numero_fiados.textContent = resultado.numero_fiados\r\n            numero_pagos.textContent = resultado.numero_pagos\r\n            numero_cajas.textContent = resultado.numero_cajas\r\n            numero_productos.textContent = resultado.numero_productos\r\n            numero_clientes.textContent = resultado.numero_clientes\r\n            \r\n        }\r\n\r\n        async function cargarInformacion(fecha){\r\n\r\n            const datos = new FormData();\r\n            datos.append('fecha',fecha);\r\n            const url = `${location.origin}/api/info-general`;\r\n\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    method:'POST',\r\n                    body:datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                console.log(resultado)\r\n                // console.log(resultado);\r\n                mostrarInfo(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n})();","(function () {\r\n    const ventas = document.querySelector('#ventas');\r\n    if (ventas) {\r\n        let tablaVentas;\r\n\r\n        $('#tabla').on('click', '#editar', function (e) {\r\n\r\n\r\n            id = e.currentTarget.dataset.ventaId;\r\n\r\n\r\n            revisarPagosAsociados(id);\r\n\r\n\r\n            // accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function (e) {\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n\r\n            alertaEliminarVenta(ventaId, e);\r\n        })\r\n        $('#tabla').on('click', '#imprimir', function (e) {\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n            imprimirVenta(ventaId);\r\n        })\r\n\r\n        async function imprimirVenta(id) {\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n            const url = `${location.origin}/api/imprimir-venta?id=${id}`;\r\n            window.open(url, \"_blank\");\r\n\r\n            // try {\r\n            //     const respuesta = await fetch(url)\r\n            //     const resultado = await respuesta.json();\r\n            //     console.log(resultado)\r\n            // } catch (error) {\r\n            //     console.log(error)\r\n            // }\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n        async function revisarPagosAsociados(id) {\r\n\r\n            const datos = new FormData();\r\n\r\n            datos.append('id', id);\r\n            const url = `${location.origin}/api/revisar-venta`;\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                })\r\n\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n\r\n                    const idString = id.toString();\r\n                    window.location = `/crear-venta?id=${btoa(idString)}`;\r\n\r\n                }\r\n\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function alertaEliminarVenta(id, e) {\r\n\r\n            const numero_venta = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n\r\n\r\n            Swal.fire({\r\n                icon: 'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar la venta numero <span class=\"font-weight-bold\"> ${numero_venta} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n\r\n\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    eliminarVenta(id)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarVenta(id) {\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n\r\n            url = `${location.origin}/api/venta/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    body: datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(() => {\r\n                        eliminarToastAnterior();\r\n                    }, 8000)\r\n\r\n\r\n                    tablaVentas.ajax.reload();\r\n                }\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n        mostrarVentas()\r\n        // function mostrarVentas(){\r\n\r\n        //     $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n\r\n        //     tablaVentas = $('#tabla').DataTable({\r\n        //         ajax: '/api/ventas',\r\n        //         \"deferRender\":true,\r\n        //         \"retrieve\":true,\r\n        //         \"proccesing\":true,\r\n        //         responsive:true,\r\n\r\n        //     });\r\n\r\n\r\n\r\n        // }  \r\n\r\n        function mostrarVentas() {\r\n            if ($.fn.DataTable.isDataTable('#tabla')) {\r\n                $('#tabla').DataTable().destroy();\r\n            }\r\n         \r\n\r\n            tablaVentas = $('#tabla').DataTable({\r\n                processing: true,\r\n                serverSide: true,\r\n                ajax: {\r\n                    url: '/api/ventas',\r\n                    type: 'GET'\r\n                },\r\n                responsive: true,\r\n\r\n                order: [[1, 'desc']],\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 a 0 de 0 Entradas\",\r\n                    \"infoFiltered\": \"(filtrado de _MAX_ entradas totales)\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"No se encontraron resultados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Último\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                }\r\n            \r\n            });\r\n        }\r\n\r\n\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n    }\r\n})();"]}